// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package teamv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Authority                 protoreflect.MessageDescriptor
	fd_Authority_total_rewards   protoreflect.FieldDescriptor
	fd_Authority_rewards_claimed protoreflect.FieldDescriptor
)

func init() {
	file_kyve_team_v1beta1_team_proto_init()
	md_Authority = File_kyve_team_v1beta1_team_proto.Messages().ByName("Authority")
	fd_Authority_total_rewards = md_Authority.Fields().ByName("total_rewards")
	fd_Authority_rewards_claimed = md_Authority.Fields().ByName("rewards_claimed")
}

var _ protoreflect.Message = (*fastReflection_Authority)(nil)

type fastReflection_Authority Authority

func (x *Authority) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Authority)(x)
}

func (x *Authority) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_team_v1beta1_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Authority_messageType fastReflection_Authority_messageType
var _ protoreflect.MessageType = fastReflection_Authority_messageType{}

type fastReflection_Authority_messageType struct{}

func (x fastReflection_Authority_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Authority)(nil)
}
func (x fastReflection_Authority_messageType) New() protoreflect.Message {
	return new(fastReflection_Authority)
}
func (x fastReflection_Authority_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Authority
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Authority) Descriptor() protoreflect.MessageDescriptor {
	return md_Authority
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Authority) Type() protoreflect.MessageType {
	return _fastReflection_Authority_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Authority) New() protoreflect.Message {
	return new(fastReflection_Authority)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Authority) Interface() protoreflect.ProtoMessage {
	return (*Authority)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Authority) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalRewards != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalRewards)
		if !f(fd_Authority_total_rewards, value) {
			return
		}
	}
	if x.RewardsClaimed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardsClaimed)
		if !f(fd_Authority_rewards_claimed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Authority) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		return x.TotalRewards != uint64(0)
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		return x.RewardsClaimed != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Authority) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		x.TotalRewards = uint64(0)
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		x.RewardsClaimed = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Authority) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		value := x.TotalRewards
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		value := x.RewardsClaimed
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Authority) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		x.TotalRewards = value.Uint()
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		x.RewardsClaimed = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Authority) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		panic(fmt.Errorf("field total_rewards of message kyve.team.v1beta1.Authority is not mutable"))
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		panic(fmt.Errorf("field rewards_claimed of message kyve.team.v1beta1.Authority is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Authority) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.team.v1beta1.Authority.total_rewards":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.Authority.rewards_claimed":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.Authority"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.Authority does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Authority) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.team.v1beta1.Authority", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Authority) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Authority) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Authority) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Authority) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Authority)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TotalRewards != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalRewards))
		}
		if x.RewardsClaimed != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardsClaimed))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Authority)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RewardsClaimed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardsClaimed))
			i--
			dAtA[i] = 0x10
		}
		if x.TotalRewards != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalRewards))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Authority)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Authority: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Authority: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalRewards", wireType)
				}
				x.TotalRewards = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalRewards |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardsClaimed", wireType)
				}
				x.RewardsClaimed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardsClaimed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TeamVestingAccount                   protoreflect.MessageDescriptor
	fd_TeamVestingAccount_id                protoreflect.FieldDescriptor
	fd_TeamVestingAccount_total_allocation  protoreflect.FieldDescriptor
	fd_TeamVestingAccount_commencement      protoreflect.FieldDescriptor
	fd_TeamVestingAccount_clawback          protoreflect.FieldDescriptor
	fd_TeamVestingAccount_unlocked_claimed  protoreflect.FieldDescriptor
	fd_TeamVestingAccount_last_claimed_time protoreflect.FieldDescriptor
	fd_TeamVestingAccount_total_rewards     protoreflect.FieldDescriptor
	fd_TeamVestingAccount_rewards_claimed   protoreflect.FieldDescriptor
)

func init() {
	file_kyve_team_v1beta1_team_proto_init()
	md_TeamVestingAccount = File_kyve_team_v1beta1_team_proto.Messages().ByName("TeamVestingAccount")
	fd_TeamVestingAccount_id = md_TeamVestingAccount.Fields().ByName("id")
	fd_TeamVestingAccount_total_allocation = md_TeamVestingAccount.Fields().ByName("total_allocation")
	fd_TeamVestingAccount_commencement = md_TeamVestingAccount.Fields().ByName("commencement")
	fd_TeamVestingAccount_clawback = md_TeamVestingAccount.Fields().ByName("clawback")
	fd_TeamVestingAccount_unlocked_claimed = md_TeamVestingAccount.Fields().ByName("unlocked_claimed")
	fd_TeamVestingAccount_last_claimed_time = md_TeamVestingAccount.Fields().ByName("last_claimed_time")
	fd_TeamVestingAccount_total_rewards = md_TeamVestingAccount.Fields().ByName("total_rewards")
	fd_TeamVestingAccount_rewards_claimed = md_TeamVestingAccount.Fields().ByName("rewards_claimed")
}

var _ protoreflect.Message = (*fastReflection_TeamVestingAccount)(nil)

type fastReflection_TeamVestingAccount TeamVestingAccount

func (x *TeamVestingAccount) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TeamVestingAccount)(x)
}

func (x *TeamVestingAccount) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_team_v1beta1_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TeamVestingAccount_messageType fastReflection_TeamVestingAccount_messageType
var _ protoreflect.MessageType = fastReflection_TeamVestingAccount_messageType{}

type fastReflection_TeamVestingAccount_messageType struct{}

func (x fastReflection_TeamVestingAccount_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TeamVestingAccount)(nil)
}
func (x fastReflection_TeamVestingAccount_messageType) New() protoreflect.Message {
	return new(fastReflection_TeamVestingAccount)
}
func (x fastReflection_TeamVestingAccount_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TeamVestingAccount
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TeamVestingAccount) Descriptor() protoreflect.MessageDescriptor {
	return md_TeamVestingAccount
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TeamVestingAccount) Type() protoreflect.MessageType {
	return _fastReflection_TeamVestingAccount_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TeamVestingAccount) New() protoreflect.Message {
	return new(fastReflection_TeamVestingAccount)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TeamVestingAccount) Interface() protoreflect.ProtoMessage {
	return (*TeamVestingAccount)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TeamVestingAccount) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_TeamVestingAccount_id, value) {
			return
		}
	}
	if x.TotalAllocation != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalAllocation)
		if !f(fd_TeamVestingAccount_total_allocation, value) {
			return
		}
	}
	if x.Commencement != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Commencement)
		if !f(fd_TeamVestingAccount_commencement, value) {
			return
		}
	}
	if x.Clawback != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Clawback)
		if !f(fd_TeamVestingAccount_clawback, value) {
			return
		}
	}
	if x.UnlockedClaimed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UnlockedClaimed)
		if !f(fd_TeamVestingAccount_unlocked_claimed, value) {
			return
		}
	}
	if x.LastClaimedTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LastClaimedTime)
		if !f(fd_TeamVestingAccount_last_claimed_time, value) {
			return
		}
	}
	if x.TotalRewards != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalRewards)
		if !f(fd_TeamVestingAccount_total_rewards, value) {
			return
		}
	}
	if x.RewardsClaimed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardsClaimed)
		if !f(fd_TeamVestingAccount_rewards_claimed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TeamVestingAccount) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		return x.Id != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		return x.TotalAllocation != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		return x.Commencement != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		return x.Clawback != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		return x.UnlockedClaimed != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		return x.LastClaimedTime != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		return x.TotalRewards != uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		return x.RewardsClaimed != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TeamVestingAccount) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		x.Id = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		x.TotalAllocation = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		x.Commencement = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		x.Clawback = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		x.UnlockedClaimed = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		x.LastClaimedTime = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		x.TotalRewards = uint64(0)
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		x.RewardsClaimed = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TeamVestingAccount) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		value := x.TotalAllocation
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		value := x.Commencement
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		value := x.Clawback
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		value := x.UnlockedClaimed
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		value := x.LastClaimedTime
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		value := x.TotalRewards
		return protoreflect.ValueOfUint64(value)
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		value := x.RewardsClaimed
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TeamVestingAccount) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		x.Id = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		x.TotalAllocation = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		x.Commencement = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		x.Clawback = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		x.UnlockedClaimed = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		x.LastClaimedTime = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		x.TotalRewards = value.Uint()
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		x.RewardsClaimed = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TeamVestingAccount) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		panic(fmt.Errorf("field id of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		panic(fmt.Errorf("field total_allocation of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		panic(fmt.Errorf("field commencement of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		panic(fmt.Errorf("field clawback of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		panic(fmt.Errorf("field unlocked_claimed of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		panic(fmt.Errorf("field last_claimed_time of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		panic(fmt.Errorf("field total_rewards of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		panic(fmt.Errorf("field rewards_claimed of message kyve.team.v1beta1.TeamVestingAccount is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TeamVestingAccount) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.team.v1beta1.TeamVestingAccount.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.total_allocation":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.commencement":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.clawback":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.unlocked_claimed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.last_claimed_time":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.total_rewards":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.team.v1beta1.TeamVestingAccount.rewards_claimed":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.team.v1beta1.TeamVestingAccount"))
		}
		panic(fmt.Errorf("message kyve.team.v1beta1.TeamVestingAccount does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TeamVestingAccount) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.team.v1beta1.TeamVestingAccount", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TeamVestingAccount) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TeamVestingAccount) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TeamVestingAccount) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TeamVestingAccount) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TeamVestingAccount)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.TotalAllocation != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalAllocation))
		}
		if x.Commencement != 0 {
			n += 1 + runtime.Sov(uint64(x.Commencement))
		}
		if x.Clawback != 0 {
			n += 1 + runtime.Sov(uint64(x.Clawback))
		}
		if x.UnlockedClaimed != 0 {
			n += 1 + runtime.Sov(uint64(x.UnlockedClaimed))
		}
		if x.LastClaimedTime != 0 {
			n += 1 + runtime.Sov(uint64(x.LastClaimedTime))
		}
		if x.TotalRewards != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalRewards))
		}
		if x.RewardsClaimed != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardsClaimed))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TeamVestingAccount)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RewardsClaimed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardsClaimed))
			i--
			dAtA[i] = 0x40
		}
		if x.TotalRewards != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalRewards))
			i--
			dAtA[i] = 0x38
		}
		if x.LastClaimedTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastClaimedTime))
			i--
			dAtA[i] = 0x30
		}
		if x.UnlockedClaimed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UnlockedClaimed))
			i--
			dAtA[i] = 0x28
		}
		if x.Clawback != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Clawback))
			i--
			dAtA[i] = 0x20
		}
		if x.Commencement != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Commencement))
			i--
			dAtA[i] = 0x18
		}
		if x.TotalAllocation != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalAllocation))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TeamVestingAccount)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TeamVestingAccount: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TeamVestingAccount: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalAllocation", wireType)
				}
				x.TotalAllocation = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalAllocation |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Commencement", wireType)
				}
				x.Commencement = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Commencement |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Clawback", wireType)
				}
				x.Clawback = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Clawback |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnlockedClaimed", wireType)
				}
				x.UnlockedClaimed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UnlockedClaimed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastClaimedTime", wireType)
				}
				x.LastClaimedTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastClaimedTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalRewards", wireType)
				}
				x.TotalRewards = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalRewards |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardsClaimed", wireType)
				}
				x.RewardsClaimed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardsClaimed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: kyve/team/v1beta1/team.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Authority ...
type Authority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total inflation rewards is the total amount of rewards the authority has received ever
	TotalRewards uint64 `protobuf:"varint,1,opt,name=total_rewards,json=totalRewards,proto3" json:"total_rewards,omitempty"`
	// claimed is the amount of inflation rewards claimed by the authority
	RewardsClaimed uint64 `protobuf:"varint,2,opt,name=rewards_claimed,json=rewardsClaimed,proto3" json:"rewards_claimed,omitempty"`
}

func (x *Authority) Reset() {
	*x = Authority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_team_v1beta1_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authority) ProtoMessage() {}

// Deprecated: Use Authority.ProtoReflect.Descriptor instead.
func (*Authority) Descriptor() ([]byte, []int) {
	return file_kyve_team_v1beta1_team_proto_rawDescGZIP(), []int{0}
}

func (x *Authority) GetTotalRewards() uint64 {
	if x != nil {
		return x.TotalRewards
	}
	return 0
}

func (x *Authority) GetRewardsClaimed() uint64 {
	if x != nil {
		return x.RewardsClaimed
	}
	return 0
}

// TeamVestingAccount ...
type TeamVestingAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is a unique identify for each vesting account, tied to a single team member.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// total_allocation is the number of tokens reserved for this team member.
	TotalAllocation uint64 `protobuf:"varint,2,opt,name=total_allocation,json=totalAllocation,proto3" json:"total_allocation,omitempty"`
	// commencement is the unix timestamp of the member's official start date in seconds
	Commencement uint64 `protobuf:"varint,3,opt,name=commencement,proto3" json:"commencement,omitempty"`
	// clawback is a unix timestamp of a clawback in seconds. If timestamp is zero
	// it means that the account has not received a clawback
	Clawback uint64 `protobuf:"varint,4,opt,name=clawback,proto3" json:"clawback,omitempty"`
	// unlocked_claimed is the amount of $KYVE already claimed by the account holder
	UnlockedClaimed uint64 `protobuf:"varint,5,opt,name=unlocked_claimed,json=unlockedClaimed,proto3" json:"unlocked_claimed,omitempty"`
	// the last time the unlocked amount was claimed
	LastClaimedTime uint64 `protobuf:"varint,6,opt,name=last_claimed_time,json=lastClaimedTime,proto3" json:"last_claimed_time,omitempty"`
	// total rewards is the total amount of rewards the account has received ever
	TotalRewards uint64 `protobuf:"varint,7,opt,name=total_rewards,json=totalRewards,proto3" json:"total_rewards,omitempty"`
	// rewards claimed is the amount inflation rewards claimed by account holder
	RewardsClaimed uint64 `protobuf:"varint,8,opt,name=rewards_claimed,json=rewardsClaimed,proto3" json:"rewards_claimed,omitempty"`
}

func (x *TeamVestingAccount) Reset() {
	*x = TeamVestingAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_team_v1beta1_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamVestingAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamVestingAccount) ProtoMessage() {}

// Deprecated: Use TeamVestingAccount.ProtoReflect.Descriptor instead.
func (*TeamVestingAccount) Descriptor() ([]byte, []int) {
	return file_kyve_team_v1beta1_team_proto_rawDescGZIP(), []int{1}
}

func (x *TeamVestingAccount) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TeamVestingAccount) GetTotalAllocation() uint64 {
	if x != nil {
		return x.TotalAllocation
	}
	return 0
}

func (x *TeamVestingAccount) GetCommencement() uint64 {
	if x != nil {
		return x.Commencement
	}
	return 0
}

func (x *TeamVestingAccount) GetClawback() uint64 {
	if x != nil {
		return x.Clawback
	}
	return 0
}

func (x *TeamVestingAccount) GetUnlockedClaimed() uint64 {
	if x != nil {
		return x.UnlockedClaimed
	}
	return 0
}

func (x *TeamVestingAccount) GetLastClaimedTime() uint64 {
	if x != nil {
		return x.LastClaimedTime
	}
	return 0
}

func (x *TeamVestingAccount) GetTotalRewards() uint64 {
	if x != nil {
		return x.TotalRewards
	}
	return 0
}

func (x *TeamVestingAccount) GetRewardsClaimed() uint64 {
	if x != nil {
		return x.RewardsClaimed
	}
	return 0
}

var File_kyve_team_v1beta1_team_proto protoreflect.FileDescriptor

var file_kyve_team_v1beta1_team_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x6b, 0x79, 0x76, 0x65, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x22, 0x59, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x22, 0xb4, 0x02, 0x0a,
	0x12, 0x54, 0x65, 0x61, 0x6d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x29,
	0x0a, 0x10, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x42, 0xcb, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x79, 0x76, 0x65,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x09, 0x54,
	0x65, 0x61, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x59, 0x56, 0x45, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x2f,
	0x6b, 0x79, 0x76, 0x65, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03,
	0x4b, 0x54, 0x58, 0xaa, 0x02, 0x11, 0x4b, 0x79, 0x76, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x11, 0x4b, 0x79, 0x76, 0x65, 0x5c, 0x54,
	0x65, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x1d, 0x4b, 0x79,
	0x76, 0x65, 0x5c, 0x54, 0x65, 0x61, 0x6d, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4b, 0x79,
	0x76, 0x65, 0x3a, 0x3a, 0x54, 0x65, 0x61, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kyve_team_v1beta1_team_proto_rawDescOnce sync.Once
	file_kyve_team_v1beta1_team_proto_rawDescData = file_kyve_team_v1beta1_team_proto_rawDesc
)

func file_kyve_team_v1beta1_team_proto_rawDescGZIP() []byte {
	file_kyve_team_v1beta1_team_proto_rawDescOnce.Do(func() {
		file_kyve_team_v1beta1_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_kyve_team_v1beta1_team_proto_rawDescData)
	})
	return file_kyve_team_v1beta1_team_proto_rawDescData
}

var file_kyve_team_v1beta1_team_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kyve_team_v1beta1_team_proto_goTypes = []interface{}{
	(*Authority)(nil),          // 0: kyve.team.v1beta1.Authority
	(*TeamVestingAccount)(nil), // 1: kyve.team.v1beta1.TeamVestingAccount
}
var file_kyve_team_v1beta1_team_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kyve_team_v1beta1_team_proto_init() }
func file_kyve_team_v1beta1_team_proto_init() {
	if File_kyve_team_v1beta1_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kyve_team_v1beta1_team_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_team_v1beta1_team_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamVestingAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kyve_team_v1beta1_team_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kyve_team_v1beta1_team_proto_goTypes,
		DependencyIndexes: file_kyve_team_v1beta1_team_proto_depIdxs,
		MessageInfos:      file_kyve_team_v1beta1_team_proto_msgTypes,
	}.Build()
	File_kyve_team_v1beta1_team_proto = out.File
	file_kyve_team_v1beta1_team_proto_rawDesc = nil
	file_kyve_team_v1beta1_team_proto_goTypes = nil
	file_kyve_team_v1beta1_team_proto_depIdxs = nil
}
