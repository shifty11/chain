// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package delegationv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Delegator                protoreflect.MessageDescriptor
	fd_Delegator_staker         protoreflect.FieldDescriptor
	fd_Delegator_delegator      protoreflect.FieldDescriptor
	fd_Delegator_k_index        protoreflect.FieldDescriptor
	fd_Delegator_initial_amount protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_Delegator = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("Delegator")
	fd_Delegator_staker = md_Delegator.Fields().ByName("staker")
	fd_Delegator_delegator = md_Delegator.Fields().ByName("delegator")
	fd_Delegator_k_index = md_Delegator.Fields().ByName("k_index")
	fd_Delegator_initial_amount = md_Delegator.Fields().ByName("initial_amount")
}

var _ protoreflect.Message = (*fastReflection_Delegator)(nil)

type fastReflection_Delegator Delegator

func (x *Delegator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Delegator)(x)
}

func (x *Delegator) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Delegator_messageType fastReflection_Delegator_messageType
var _ protoreflect.MessageType = fastReflection_Delegator_messageType{}

type fastReflection_Delegator_messageType struct{}

func (x fastReflection_Delegator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Delegator)(nil)
}
func (x fastReflection_Delegator_messageType) New() protoreflect.Message {
	return new(fastReflection_Delegator)
}
func (x fastReflection_Delegator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Delegator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Delegator) Descriptor() protoreflect.MessageDescriptor {
	return md_Delegator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Delegator) Type() protoreflect.MessageType {
	return _fastReflection_Delegator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Delegator) New() protoreflect.Message {
	return new(fastReflection_Delegator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Delegator) Interface() protoreflect.ProtoMessage {
	return (*Delegator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Delegator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_Delegator_staker, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_Delegator_delegator, value) {
			return
		}
	}
	if x.KIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KIndex)
		if !f(fd_Delegator_k_index, value) {
			return
		}
	}
	if x.InitialAmount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.InitialAmount)
		if !f(fd_Delegator_initial_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Delegator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		return x.Staker != ""
	case "kyve.delegation.v1beta1.Delegator.delegator":
		return x.Delegator != ""
	case "kyve.delegation.v1beta1.Delegator.k_index":
		return x.KIndex != uint64(0)
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		return x.InitialAmount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Delegator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		x.Staker = ""
	case "kyve.delegation.v1beta1.Delegator.delegator":
		x.Delegator = ""
	case "kyve.delegation.v1beta1.Delegator.k_index":
		x.KIndex = uint64(0)
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		x.InitialAmount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Delegator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.Delegator.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.Delegator.k_index":
		value := x.KIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		value := x.InitialAmount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Delegator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		x.Staker = value.Interface().(string)
	case "kyve.delegation.v1beta1.Delegator.delegator":
		x.Delegator = value.Interface().(string)
	case "kyve.delegation.v1beta1.Delegator.k_index":
		x.KIndex = value.Uint()
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		x.InitialAmount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Delegator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		panic(fmt.Errorf("field staker of message kyve.delegation.v1beta1.Delegator is not mutable"))
	case "kyve.delegation.v1beta1.Delegator.delegator":
		panic(fmt.Errorf("field delegator of message kyve.delegation.v1beta1.Delegator is not mutable"))
	case "kyve.delegation.v1beta1.Delegator.k_index":
		panic(fmt.Errorf("field k_index of message kyve.delegation.v1beta1.Delegator is not mutable"))
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		panic(fmt.Errorf("field initial_amount of message kyve.delegation.v1beta1.Delegator is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Delegator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.Delegator.staker":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.Delegator.delegator":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.Delegator.k_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.Delegator.initial_amount":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.Delegator"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.Delegator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Delegator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.Delegator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Delegator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Delegator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Delegator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Delegator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Delegator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.KIndex))
		}
		if x.InitialAmount != 0 {
			n += 1 + runtime.Sov(uint64(x.InitialAmount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Delegator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.InitialAmount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InitialAmount))
			i--
			dAtA[i] = 0x20
		}
		if x.KIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KIndex))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Delegator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Delegator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Delegator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KIndex", wireType)
				}
				x.KIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InitialAmount", wireType)
				}
				x.InitialAmount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InitialAmount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegationEntry         protoreflect.MessageDescriptor
	fd_DelegationEntry_staker  protoreflect.FieldDescriptor
	fd_DelegationEntry_k_index protoreflect.FieldDescriptor
	fd_DelegationEntry_value   protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_DelegationEntry = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("DelegationEntry")
	fd_DelegationEntry_staker = md_DelegationEntry.Fields().ByName("staker")
	fd_DelegationEntry_k_index = md_DelegationEntry.Fields().ByName("k_index")
	fd_DelegationEntry_value = md_DelegationEntry.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_DelegationEntry)(nil)

type fastReflection_DelegationEntry DelegationEntry

func (x *DelegationEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationEntry)(x)
}

func (x *DelegationEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationEntry_messageType fastReflection_DelegationEntry_messageType
var _ protoreflect.MessageType = fastReflection_DelegationEntry_messageType{}

type fastReflection_DelegationEntry_messageType struct{}

func (x fastReflection_DelegationEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationEntry)(nil)
}
func (x fastReflection_DelegationEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationEntry)
}
func (x fastReflection_DelegationEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationEntry) Type() protoreflect.MessageType {
	return _fastReflection_DelegationEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationEntry) New() protoreflect.Message {
	return new(fastReflection_DelegationEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationEntry) Interface() protoreflect.ProtoMessage {
	return (*DelegationEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_DelegationEntry_staker, value) {
			return
		}
	}
	if x.KIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KIndex)
		if !f(fd_DelegationEntry_k_index, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_DelegationEntry_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		return x.Staker != ""
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		return x.KIndex != uint64(0)
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		x.Staker = ""
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		x.KIndex = uint64(0)
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		value := x.KIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		x.Staker = value.Interface().(string)
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		x.KIndex = value.Uint()
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		panic(fmt.Errorf("field staker of message kyve.delegation.v1beta1.DelegationEntry is not mutable"))
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		panic(fmt.Errorf("field k_index of message kyve.delegation.v1beta1.DelegationEntry is not mutable"))
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		panic(fmt.Errorf("field value of message kyve.delegation.v1beta1.DelegationEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationEntry.staker":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.DelegationEntry.k_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationEntry.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.DelegationEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.KIndex))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x1a
		}
		if x.KIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KIndex))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KIndex", wireType)
				}
				x.KIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegationData                               protoreflect.MessageDescriptor
	fd_DelegationData_staker                        protoreflect.FieldDescriptor
	fd_DelegationData_current_rewards               protoreflect.FieldDescriptor
	fd_DelegationData_total_delegation              protoreflect.FieldDescriptor
	fd_DelegationData_latest_index_k                protoreflect.FieldDescriptor
	fd_DelegationData_delegator_count               protoreflect.FieldDescriptor
	fd_DelegationData_latest_index_was_undelegation protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_DelegationData = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("DelegationData")
	fd_DelegationData_staker = md_DelegationData.Fields().ByName("staker")
	fd_DelegationData_current_rewards = md_DelegationData.Fields().ByName("current_rewards")
	fd_DelegationData_total_delegation = md_DelegationData.Fields().ByName("total_delegation")
	fd_DelegationData_latest_index_k = md_DelegationData.Fields().ByName("latest_index_k")
	fd_DelegationData_delegator_count = md_DelegationData.Fields().ByName("delegator_count")
	fd_DelegationData_latest_index_was_undelegation = md_DelegationData.Fields().ByName("latest_index_was_undelegation")
}

var _ protoreflect.Message = (*fastReflection_DelegationData)(nil)

type fastReflection_DelegationData DelegationData

func (x *DelegationData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationData)(x)
}

func (x *DelegationData) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationData_messageType fastReflection_DelegationData_messageType
var _ protoreflect.MessageType = fastReflection_DelegationData_messageType{}

type fastReflection_DelegationData_messageType struct{}

func (x fastReflection_DelegationData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationData)(nil)
}
func (x fastReflection_DelegationData_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationData)
}
func (x fastReflection_DelegationData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationData) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationData) Type() protoreflect.MessageType {
	return _fastReflection_DelegationData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationData) New() protoreflect.Message {
	return new(fastReflection_DelegationData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationData) Interface() protoreflect.ProtoMessage {
	return (*DelegationData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_DelegationData_staker, value) {
			return
		}
	}
	if x.CurrentRewards != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentRewards)
		if !f(fd_DelegationData_current_rewards, value) {
			return
		}
	}
	if x.TotalDelegation != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalDelegation)
		if !f(fd_DelegationData_total_delegation, value) {
			return
		}
	}
	if x.LatestIndexK != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LatestIndexK)
		if !f(fd_DelegationData_latest_index_k, value) {
			return
		}
	}
	if x.DelegatorCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DelegatorCount)
		if !f(fd_DelegationData_delegator_count, value) {
			return
		}
	}
	if x.LatestIndexWasUndelegation != false {
		value := protoreflect.ValueOfBool(x.LatestIndexWasUndelegation)
		if !f(fd_DelegationData_latest_index_was_undelegation, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		return x.Staker != ""
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		return x.CurrentRewards != uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		return x.TotalDelegation != uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		return x.LatestIndexK != uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		return x.DelegatorCount != uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		return x.LatestIndexWasUndelegation != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		x.Staker = ""
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		x.CurrentRewards = uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		x.TotalDelegation = uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		x.LatestIndexK = uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		x.DelegatorCount = uint64(0)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		x.LatestIndexWasUndelegation = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		value := x.CurrentRewards
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		value := x.TotalDelegation
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		value := x.LatestIndexK
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		value := x.DelegatorCount
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		value := x.LatestIndexWasUndelegation
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		x.Staker = value.Interface().(string)
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		x.CurrentRewards = value.Uint()
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		x.TotalDelegation = value.Uint()
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		x.LatestIndexK = value.Uint()
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		x.DelegatorCount = value.Uint()
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		x.LatestIndexWasUndelegation = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		panic(fmt.Errorf("field staker of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		panic(fmt.Errorf("field current_rewards of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		panic(fmt.Errorf("field total_delegation of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		panic(fmt.Errorf("field latest_index_k of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		panic(fmt.Errorf("field delegator_count of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		panic(fmt.Errorf("field latest_index_was_undelegation of message kyve.delegation.v1beta1.DelegationData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationData.staker":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.DelegationData.current_rewards":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationData.total_delegation":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationData.latest_index_k":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationData.delegator_count":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationData.latest_index_was_undelegation":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationData"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.DelegationData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CurrentRewards != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentRewards))
		}
		if x.TotalDelegation != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalDelegation))
		}
		if x.LatestIndexK != 0 {
			n += 1 + runtime.Sov(uint64(x.LatestIndexK))
		}
		if x.DelegatorCount != 0 {
			n += 1 + runtime.Sov(uint64(x.DelegatorCount))
		}
		if x.LatestIndexWasUndelegation {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LatestIndexWasUndelegation {
			i--
			if x.LatestIndexWasUndelegation {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.DelegatorCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DelegatorCount))
			i--
			dAtA[i] = 0x28
		}
		if x.LatestIndexK != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LatestIndexK))
			i--
			dAtA[i] = 0x20
		}
		if x.TotalDelegation != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalDelegation))
			i--
			dAtA[i] = 0x18
		}
		if x.CurrentRewards != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentRewards))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentRewards", wireType)
				}
				x.CurrentRewards = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentRewards |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalDelegation", wireType)
				}
				x.TotalDelegation = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalDelegation |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestIndexK", wireType)
				}
				x.LatestIndexK = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LatestIndexK |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorCount", wireType)
				}
				x.DelegatorCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DelegatorCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestIndexWasUndelegation", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.LatestIndexWasUndelegation = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegationSlash          protoreflect.MessageDescriptor
	fd_DelegationSlash_staker   protoreflect.FieldDescriptor
	fd_DelegationSlash_k_index  protoreflect.FieldDescriptor
	fd_DelegationSlash_fraction protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_DelegationSlash = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("DelegationSlash")
	fd_DelegationSlash_staker = md_DelegationSlash.Fields().ByName("staker")
	fd_DelegationSlash_k_index = md_DelegationSlash.Fields().ByName("k_index")
	fd_DelegationSlash_fraction = md_DelegationSlash.Fields().ByName("fraction")
}

var _ protoreflect.Message = (*fastReflection_DelegationSlash)(nil)

type fastReflection_DelegationSlash DelegationSlash

func (x *DelegationSlash) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationSlash)(x)
}

func (x *DelegationSlash) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationSlash_messageType fastReflection_DelegationSlash_messageType
var _ protoreflect.MessageType = fastReflection_DelegationSlash_messageType{}

type fastReflection_DelegationSlash_messageType struct{}

func (x fastReflection_DelegationSlash_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationSlash)(nil)
}
func (x fastReflection_DelegationSlash_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationSlash)
}
func (x fastReflection_DelegationSlash_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationSlash
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationSlash) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationSlash
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationSlash) Type() protoreflect.MessageType {
	return _fastReflection_DelegationSlash_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationSlash) New() protoreflect.Message {
	return new(fastReflection_DelegationSlash)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationSlash) Interface() protoreflect.ProtoMessage {
	return (*DelegationSlash)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationSlash) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_DelegationSlash_staker, value) {
			return
		}
	}
	if x.KIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KIndex)
		if !f(fd_DelegationSlash_k_index, value) {
			return
		}
	}
	if x.Fraction != "" {
		value := protoreflect.ValueOfString(x.Fraction)
		if !f(fd_DelegationSlash_fraction, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationSlash) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		return x.Staker != ""
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		return x.KIndex != uint64(0)
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		return x.Fraction != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationSlash) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		x.Staker = ""
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		x.KIndex = uint64(0)
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		x.Fraction = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationSlash) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		value := x.KIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		value := x.Fraction
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationSlash) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		x.Staker = value.Interface().(string)
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		x.KIndex = value.Uint()
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		x.Fraction = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationSlash) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		panic(fmt.Errorf("field staker of message kyve.delegation.v1beta1.DelegationSlash is not mutable"))
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		panic(fmt.Errorf("field k_index of message kyve.delegation.v1beta1.DelegationSlash is not mutable"))
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		panic(fmt.Errorf("field fraction of message kyve.delegation.v1beta1.DelegationSlash is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationSlash) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.DelegationSlash.staker":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.DelegationSlash.k_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.DelegationSlash.fraction":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.DelegationSlash"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.DelegationSlash does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationSlash) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.DelegationSlash", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationSlash) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationSlash) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationSlash) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationSlash) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationSlash)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.KIndex))
		}
		l = len(x.Fraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationSlash)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Fraction) > 0 {
			i -= len(x.Fraction)
			copy(dAtA[i:], x.Fraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Fraction)))
			i--
			dAtA[i] = 0x1a
		}
		if x.KIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KIndex))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationSlash)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationSlash: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationSlash: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KIndex", wireType)
				}
				x.KIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Fraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UndelegationQueueEntry               protoreflect.MessageDescriptor
	fd_UndelegationQueueEntry_index         protoreflect.FieldDescriptor
	fd_UndelegationQueueEntry_staker        protoreflect.FieldDescriptor
	fd_UndelegationQueueEntry_delegator     protoreflect.FieldDescriptor
	fd_UndelegationQueueEntry_amount        protoreflect.FieldDescriptor
	fd_UndelegationQueueEntry_creation_time protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_UndelegationQueueEntry = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("UndelegationQueueEntry")
	fd_UndelegationQueueEntry_index = md_UndelegationQueueEntry.Fields().ByName("index")
	fd_UndelegationQueueEntry_staker = md_UndelegationQueueEntry.Fields().ByName("staker")
	fd_UndelegationQueueEntry_delegator = md_UndelegationQueueEntry.Fields().ByName("delegator")
	fd_UndelegationQueueEntry_amount = md_UndelegationQueueEntry.Fields().ByName("amount")
	fd_UndelegationQueueEntry_creation_time = md_UndelegationQueueEntry.Fields().ByName("creation_time")
}

var _ protoreflect.Message = (*fastReflection_UndelegationQueueEntry)(nil)

type fastReflection_UndelegationQueueEntry UndelegationQueueEntry

func (x *UndelegationQueueEntry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UndelegationQueueEntry)(x)
}

func (x *UndelegationQueueEntry) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UndelegationQueueEntry_messageType fastReflection_UndelegationQueueEntry_messageType
var _ protoreflect.MessageType = fastReflection_UndelegationQueueEntry_messageType{}

type fastReflection_UndelegationQueueEntry_messageType struct{}

func (x fastReflection_UndelegationQueueEntry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UndelegationQueueEntry)(nil)
}
func (x fastReflection_UndelegationQueueEntry_messageType) New() protoreflect.Message {
	return new(fastReflection_UndelegationQueueEntry)
}
func (x fastReflection_UndelegationQueueEntry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UndelegationQueueEntry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UndelegationQueueEntry) Descriptor() protoreflect.MessageDescriptor {
	return md_UndelegationQueueEntry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UndelegationQueueEntry) Type() protoreflect.MessageType {
	return _fastReflection_UndelegationQueueEntry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UndelegationQueueEntry) New() protoreflect.Message {
	return new(fastReflection_UndelegationQueueEntry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UndelegationQueueEntry) Interface() protoreflect.ProtoMessage {
	return (*UndelegationQueueEntry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UndelegationQueueEntry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Index)
		if !f(fd_UndelegationQueueEntry_index, value) {
			return
		}
	}
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_UndelegationQueueEntry_staker, value) {
			return
		}
	}
	if x.Delegator != "" {
		value := protoreflect.ValueOfString(x.Delegator)
		if !f(fd_UndelegationQueueEntry_delegator, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_UndelegationQueueEntry_amount, value) {
			return
		}
	}
	if x.CreationTime != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreationTime)
		if !f(fd_UndelegationQueueEntry_creation_time, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UndelegationQueueEntry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		return x.Index != uint64(0)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		return x.Staker != ""
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		return x.Delegator != ""
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		return x.Amount != uint64(0)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		return x.CreationTime != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegationQueueEntry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		x.Index = uint64(0)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		x.Staker = ""
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		x.Delegator = ""
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		x.Amount = uint64(0)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		x.CreationTime = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UndelegationQueueEntry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		value := x.Index
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		value := x.Delegator
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		value := x.CreationTime
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegationQueueEntry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		x.Index = value.Uint()
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		x.Staker = value.Interface().(string)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		x.Delegator = value.Interface().(string)
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		x.Amount = value.Uint()
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		x.CreationTime = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegationQueueEntry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		panic(fmt.Errorf("field index of message kyve.delegation.v1beta1.UndelegationQueueEntry is not mutable"))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		panic(fmt.Errorf("field staker of message kyve.delegation.v1beta1.UndelegationQueueEntry is not mutable"))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		panic(fmt.Errorf("field delegator of message kyve.delegation.v1beta1.UndelegationQueueEntry is not mutable"))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		panic(fmt.Errorf("field amount of message kyve.delegation.v1beta1.UndelegationQueueEntry is not mutable"))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		panic(fmt.Errorf("field creation_time of message kyve.delegation.v1beta1.UndelegationQueueEntry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UndelegationQueueEntry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.staker":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.delegator":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.UndelegationQueueEntry.creation_time":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.UndelegationQueueEntry"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.UndelegationQueueEntry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UndelegationQueueEntry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.UndelegationQueueEntry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UndelegationQueueEntry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UndelegationQueueEntry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UndelegationQueueEntry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UndelegationQueueEntry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UndelegationQueueEntry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.CreationTime != 0 {
			n += 1 + runtime.Sov(uint64(x.CreationTime))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UndelegationQueueEntry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CreationTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreationTime))
			i--
			dAtA[i] = 0x28
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Delegator) > 0 {
			i -= len(x.Delegator)
			copy(dAtA[i:], x.Delegator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegator)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0x12
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UndelegationQueueEntry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UndelegationQueueEntry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UndelegationQueueEntry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreationTime", wireType)
				}
				x.CreationTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreationTime |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueueState            protoreflect.MessageDescriptor
	fd_QueueState_low_index  protoreflect.FieldDescriptor
	fd_QueueState_high_index protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_QueueState = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("QueueState")
	fd_QueueState_low_index = md_QueueState.Fields().ByName("low_index")
	fd_QueueState_high_index = md_QueueState.Fields().ByName("high_index")
}

var _ protoreflect.Message = (*fastReflection_QueueState)(nil)

type fastReflection_QueueState QueueState

func (x *QueueState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueueState)(x)
}

func (x *QueueState) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueueState_messageType fastReflection_QueueState_messageType
var _ protoreflect.MessageType = fastReflection_QueueState_messageType{}

type fastReflection_QueueState_messageType struct{}

func (x fastReflection_QueueState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueueState)(nil)
}
func (x fastReflection_QueueState_messageType) New() protoreflect.Message {
	return new(fastReflection_QueueState)
}
func (x fastReflection_QueueState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueueState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueueState) Descriptor() protoreflect.MessageDescriptor {
	return md_QueueState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueueState) Type() protoreflect.MessageType {
	return _fastReflection_QueueState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueueState) New() protoreflect.Message {
	return new(fastReflection_QueueState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueueState) Interface() protoreflect.ProtoMessage {
	return (*QueueState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueueState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LowIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LowIndex)
		if !f(fd_QueueState_low_index, value) {
			return
		}
	}
	if x.HighIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.HighIndex)
		if !f(fd_QueueState_high_index, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueueState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		return x.LowIndex != uint64(0)
	case "kyve.delegation.v1beta1.QueueState.high_index":
		return x.HighIndex != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueueState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		x.LowIndex = uint64(0)
	case "kyve.delegation.v1beta1.QueueState.high_index":
		x.HighIndex = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueueState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		value := x.LowIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.delegation.v1beta1.QueueState.high_index":
		value := x.HighIndex
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueueState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		x.LowIndex = value.Uint()
	case "kyve.delegation.v1beta1.QueueState.high_index":
		x.HighIndex = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueueState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		panic(fmt.Errorf("field low_index of message kyve.delegation.v1beta1.QueueState is not mutable"))
	case "kyve.delegation.v1beta1.QueueState.high_index":
		panic(fmt.Errorf("field high_index of message kyve.delegation.v1beta1.QueueState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueueState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.QueueState.low_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.delegation.v1beta1.QueueState.high_index":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.QueueState"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.QueueState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueueState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.QueueState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueueState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueueState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueueState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueueState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueueState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LowIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.LowIndex))
		}
		if x.HighIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.HighIndex))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueueState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.HighIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.HighIndex))
			i--
			dAtA[i] = 0x10
		}
		if x.LowIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LowIndex))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueueState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueueState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueueState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LowIndex", wireType)
				}
				x.LowIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LowIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HighIndex", wireType)
				}
				x.HighIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.HighIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RedelegationCooldown               protoreflect.MessageDescriptor
	fd_RedelegationCooldown_address       protoreflect.FieldDescriptor
	fd_RedelegationCooldown_creation_date protoreflect.FieldDescriptor
)

func init() {
	file_kyve_delegation_v1beta1_delegation_proto_init()
	md_RedelegationCooldown = File_kyve_delegation_v1beta1_delegation_proto.Messages().ByName("RedelegationCooldown")
	fd_RedelegationCooldown_address = md_RedelegationCooldown.Fields().ByName("address")
	fd_RedelegationCooldown_creation_date = md_RedelegationCooldown.Fields().ByName("creation_date")
}

var _ protoreflect.Message = (*fastReflection_RedelegationCooldown)(nil)

type fastReflection_RedelegationCooldown RedelegationCooldown

func (x *RedelegationCooldown) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RedelegationCooldown)(x)
}

func (x *RedelegationCooldown) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RedelegationCooldown_messageType fastReflection_RedelegationCooldown_messageType
var _ protoreflect.MessageType = fastReflection_RedelegationCooldown_messageType{}

type fastReflection_RedelegationCooldown_messageType struct{}

func (x fastReflection_RedelegationCooldown_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RedelegationCooldown)(nil)
}
func (x fastReflection_RedelegationCooldown_messageType) New() protoreflect.Message {
	return new(fastReflection_RedelegationCooldown)
}
func (x fastReflection_RedelegationCooldown_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RedelegationCooldown
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RedelegationCooldown) Descriptor() protoreflect.MessageDescriptor {
	return md_RedelegationCooldown
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RedelegationCooldown) Type() protoreflect.MessageType {
	return _fastReflection_RedelegationCooldown_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RedelegationCooldown) New() protoreflect.Message {
	return new(fastReflection_RedelegationCooldown)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RedelegationCooldown) Interface() protoreflect.ProtoMessage {
	return (*RedelegationCooldown)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RedelegationCooldown) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_RedelegationCooldown_address, value) {
			return
		}
	}
	if x.CreationDate != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreationDate)
		if !f(fd_RedelegationCooldown_creation_date, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RedelegationCooldown) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		return x.Address != ""
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		return x.CreationDate != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedelegationCooldown) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		x.Address = ""
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		x.CreationDate = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RedelegationCooldown) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		value := x.CreationDate
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedelegationCooldown) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		x.Address = value.Interface().(string)
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		x.CreationDate = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedelegationCooldown) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		panic(fmt.Errorf("field address of message kyve.delegation.v1beta1.RedelegationCooldown is not mutable"))
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		panic(fmt.Errorf("field creation_date of message kyve.delegation.v1beta1.RedelegationCooldown is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RedelegationCooldown) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.delegation.v1beta1.RedelegationCooldown.address":
		return protoreflect.ValueOfString("")
	case "kyve.delegation.v1beta1.RedelegationCooldown.creation_date":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.delegation.v1beta1.RedelegationCooldown"))
		}
		panic(fmt.Errorf("message kyve.delegation.v1beta1.RedelegationCooldown does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RedelegationCooldown) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.delegation.v1beta1.RedelegationCooldown", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RedelegationCooldown) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedelegationCooldown) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RedelegationCooldown) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RedelegationCooldown) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RedelegationCooldown)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreationDate != 0 {
			n += 1 + runtime.Sov(uint64(x.CreationDate))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RedelegationCooldown)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CreationDate != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreationDate))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RedelegationCooldown)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedelegationCooldown: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedelegationCooldown: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreationDate", wireType)
				}
				x.CreationDate = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreationDate |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: kyve/delegation/v1beta1/delegation.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SlashType ...
type SlashType int32

const (
	// SLASH_TYPE_UNSPECIFIED ...
	SlashType_SLASH_TYPE_UNSPECIFIED SlashType = 0
	// SLASH_TYPE_TIMEOUT ...
	SlashType_SLASH_TYPE_TIMEOUT SlashType = 1
	// SLASH_TYPE_VOTE ...
	SlashType_SLASH_TYPE_VOTE SlashType = 2
	// SLASH_TYPE_UPLOAD ...
	SlashType_SLASH_TYPE_UPLOAD SlashType = 3
)

// Enum value maps for SlashType.
var (
	SlashType_name = map[int32]string{
		0: "SLASH_TYPE_UNSPECIFIED",
		1: "SLASH_TYPE_TIMEOUT",
		2: "SLASH_TYPE_VOTE",
		3: "SLASH_TYPE_UPLOAD",
	}
	SlashType_value = map[string]int32{
		"SLASH_TYPE_UNSPECIFIED": 0,
		"SLASH_TYPE_TIMEOUT":     1,
		"SLASH_TYPE_VOTE":        2,
		"SLASH_TYPE_UPLOAD":      3,
	}
)

func (x SlashType) Enum() *SlashType {
	p := new(SlashType)
	*p = x
	return p
}

func (x SlashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlashType) Descriptor() protoreflect.EnumDescriptor {
	return file_kyve_delegation_v1beta1_delegation_proto_enumTypes[0].Descriptor()
}

func (SlashType) Type() protoreflect.EnumType {
	return &file_kyve_delegation_v1beta1_delegation_proto_enumTypes[0]
}

func (x SlashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SlashType.Descriptor instead.
func (SlashType) EnumDescriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{0}
}

// Delegator stores the information that one address has delegated to another address
// It stores important information for the F1-Fee distribution algorithm
type Delegator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// staker corresponds to a KYVE-staker on the protocol-side
	Staker string `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	// delegator the user who delegate to the staker.
	// If staker and delegator are the same we call it: self-delegation
	Delegator string `protobuf:"bytes,2,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// k_index is an internal index for the f1-distribution algorithm
	KIndex uint64 `protobuf:"varint,3,opt,name=k_index,json=kIndex,proto3" json:"k_index,omitempty"`
	// initial_amount of stake the user had when it delegated.
	// slashes can cause that the actual stake is lower.
	InitialAmount uint64 `protobuf:"varint,4,opt,name=initial_amount,json=initialAmount,proto3" json:"initial_amount,omitempty"`
}

func (x *Delegator) Reset() {
	*x = Delegator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delegator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delegator) ProtoMessage() {}

// Deprecated: Use Delegator.ProtoReflect.Descriptor instead.
func (*Delegator) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{0}
}

func (x *Delegator) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *Delegator) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *Delegator) GetKIndex() uint64 {
	if x != nil {
		return x.KIndex
	}
	return 0
}

func (x *Delegator) GetInitialAmount() uint64 {
	if x != nil {
		return x.InitialAmount
	}
	return 0
}

// DelegationEntry represents an entry according to the F1-Fee-Distribution algorithm.
// Take a look at x/delegation/keeper/logic_f1distribution.go for more details
type DelegationEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// staker on protocol level
	Staker string `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	// k_index is the of the period this entry ends
	KIndex uint64 `protobuf:"varint,2,opt,name=k_index,json=kIndex,proto3" json:"k_index,omitempty"`
	// value is the quotient of collected rewards and total stake according to F1-distribution
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DelegationEntry) Reset() {
	*x = DelegationEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationEntry) ProtoMessage() {}

// Deprecated: Use DelegationEntry.ProtoReflect.Descriptor instead.
func (*DelegationEntry) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{1}
}

func (x *DelegationEntry) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *DelegationEntry) GetKIndex() uint64 {
	if x != nil {
		return x.KIndex
	}
	return 0
}

func (x *DelegationEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// DelegationPoolData stores general delegation information for every staker
type DelegationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every staker has one DelegationData
	Staker string `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	// current_rewards ...
	CurrentRewards uint64 `protobuf:"varint,2,opt,name=current_rewards,json=currentRewards,proto3" json:"current_rewards,omitempty"`
	// total_delegation ...
	TotalDelegation uint64 `protobuf:"varint,3,opt,name=total_delegation,json=totalDelegation,proto3" json:"total_delegation,omitempty"`
	// latest_index_k ...
	LatestIndexK uint64 `protobuf:"varint,4,opt,name=latest_index_k,json=latestIndexK,proto3" json:"latest_index_k,omitempty"`
	// delegator_count the amount of different addresses delegating to the staker
	DelegatorCount uint64 `protobuf:"varint,5,opt,name=delegator_count,json=delegatorCount,proto3" json:"delegator_count,omitempty"`
	// latest_index_was_undelegation helps indicates when an entry can be deleted
	LatestIndexWasUndelegation bool `protobuf:"varint,6,opt,name=latest_index_was_undelegation,json=latestIndexWasUndelegation,proto3" json:"latest_index_was_undelegation,omitempty"`
}

func (x *DelegationData) Reset() {
	*x = DelegationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationData) ProtoMessage() {}

// Deprecated: Use DelegationData.ProtoReflect.Descriptor instead.
func (*DelegationData) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{2}
}

func (x *DelegationData) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *DelegationData) GetCurrentRewards() uint64 {
	if x != nil {
		return x.CurrentRewards
	}
	return 0
}

func (x *DelegationData) GetTotalDelegation() uint64 {
	if x != nil {
		return x.TotalDelegation
	}
	return 0
}

func (x *DelegationData) GetLatestIndexK() uint64 {
	if x != nil {
		return x.LatestIndexK
	}
	return 0
}

func (x *DelegationData) GetDelegatorCount() uint64 {
	if x != nil {
		return x.DelegatorCount
	}
	return 0
}

func (x *DelegationData) GetLatestIndexWasUndelegation() bool {
	if x != nil {
		return x.LatestIndexWasUndelegation
	}
	return false
}

// DelegationSlash represents an f1-slash
// these entries needs to be iterated to obtain the current amount of the actual stake
// Every staker can have n slash-entries
type DelegationSlash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// staker who got slashed
	Staker string `protobuf:"bytes,1,opt,name=staker,proto3" json:"staker,omitempty"`
	// k_index for f1-algorithm
	KIndex uint64 `protobuf:"varint,2,opt,name=k_index,json=kIndex,proto3" json:"k_index,omitempty"`
	// fraction that got slashed
	Fraction string `protobuf:"bytes,3,opt,name=fraction,proto3" json:"fraction,omitempty"`
}

func (x *DelegationSlash) Reset() {
	*x = DelegationSlash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationSlash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationSlash) ProtoMessage() {}

// Deprecated: Use DelegationSlash.ProtoReflect.Descriptor instead.
func (*DelegationSlash) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{3}
}

func (x *DelegationSlash) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *DelegationSlash) GetKIndex() uint64 {
	if x != nil {
		return x.KIndex
	}
	return 0
}

func (x *DelegationSlash) GetFraction() string {
	if x != nil {
		return x.Fraction
	}
	return ""
}

// UndelegationQueueEntry ...
type UndelegationQueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// index ...
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// staker ...
	Staker string `protobuf:"bytes,2,opt,name=staker,proto3" json:"staker,omitempty"`
	// delegator ...
	Delegator string `protobuf:"bytes,3,opt,name=delegator,proto3" json:"delegator,omitempty"`
	// amount ...
	Amount uint64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// creation_time ...
	CreationTime uint64 `protobuf:"varint,5,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
}

func (x *UndelegationQueueEntry) Reset() {
	*x = UndelegationQueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UndelegationQueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndelegationQueueEntry) ProtoMessage() {}

// Deprecated: Use UndelegationQueueEntry.ProtoReflect.Descriptor instead.
func (*UndelegationQueueEntry) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{4}
}

func (x *UndelegationQueueEntry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UndelegationQueueEntry) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *UndelegationQueueEntry) GetDelegator() string {
	if x != nil {
		return x.Delegator
	}
	return ""
}

func (x *UndelegationQueueEntry) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UndelegationQueueEntry) GetCreationTime() uint64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

// QueueState ...
type QueueState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// low_index ...
	LowIndex uint64 `protobuf:"varint,1,opt,name=low_index,json=lowIndex,proto3" json:"low_index,omitempty"`
	// high_index ...
	HighIndex uint64 `protobuf:"varint,2,opt,name=high_index,json=highIndex,proto3" json:"high_index,omitempty"`
}

func (x *QueueState) Reset() {
	*x = QueueState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueState) ProtoMessage() {}

// Deprecated: Use QueueState.ProtoReflect.Descriptor instead.
func (*QueueState) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{5}
}

func (x *QueueState) GetLowIndex() uint64 {
	if x != nil {
		return x.LowIndex
	}
	return 0
}

func (x *QueueState) GetHighIndex() uint64 {
	if x != nil {
		return x.HighIndex
	}
	return 0
}

// RedelegationCooldown ...
type RedelegationCooldown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// low_index ...
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// high_index ...
	CreationDate uint64 `protobuf:"varint,2,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
}

func (x *RedelegationCooldown) Reset() {
	*x = RedelegationCooldown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_delegation_v1beta1_delegation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedelegationCooldown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedelegationCooldown) ProtoMessage() {}

// Deprecated: Use RedelegationCooldown.ProtoReflect.Descriptor instead.
func (*RedelegationCooldown) Descriptor() ([]byte, []int) {
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP(), []int{6}
}

func (x *RedelegationCooldown) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RedelegationCooldown) GetCreationDate() uint64 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

var File_kyve_delegation_v1beta1_delegation_proto protoreflect.FileDescriptor

var file_kyve_delegation_v1beta1_delegation_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6b, 0x79, 0x76, 0x65,
	0x2e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x88, 0x01,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6b, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x77, 0x61, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x57, 0x61, 0x73, 0x55, 0x6e, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4a,
	0x0a, 0x08, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2e, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x52, 0x08, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x55,
	0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67,
	0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68,
	0x69, 0x67, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x55, 0x0a, 0x14, 0x52, 0x65, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x2a,
	0x71, 0x0a, 0x09, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4c, 0x41, 0x53,
	0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56,
	0x4f, 0x54, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x4c, 0x41, 0x53, 0x48, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x03, 0x1a, 0x04, 0x88, 0xa3,
	0x1e, 0x00, 0x42, 0xfb, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x79, 0x76, 0x65, 0x2e,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x42, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4b, 0x59, 0x56, 0x45, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2f, 0x70, 0x75, 0x6c, 0x73, 0x61, 0x72, 0x2f, 0x6b, 0x79, 0x76, 0x65, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x3b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4b, 0x44, 0x58, 0xaa, 0x02, 0x17, 0x4b, 0x79, 0x76,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x17, 0x4b, 0x79, 0x76, 0x65, 0x5c, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02,
	0x23, 0x4b, 0x79, 0x76, 0x65, 0x5c, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x4b, 0x79, 0x76, 0x65, 0x3a, 0x3a, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kyve_delegation_v1beta1_delegation_proto_rawDescOnce sync.Once
	file_kyve_delegation_v1beta1_delegation_proto_rawDescData = file_kyve_delegation_v1beta1_delegation_proto_rawDesc
)

func file_kyve_delegation_v1beta1_delegation_proto_rawDescGZIP() []byte {
	file_kyve_delegation_v1beta1_delegation_proto_rawDescOnce.Do(func() {
		file_kyve_delegation_v1beta1_delegation_proto_rawDescData = protoimpl.X.CompressGZIP(file_kyve_delegation_v1beta1_delegation_proto_rawDescData)
	})
	return file_kyve_delegation_v1beta1_delegation_proto_rawDescData
}

var file_kyve_delegation_v1beta1_delegation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kyve_delegation_v1beta1_delegation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kyve_delegation_v1beta1_delegation_proto_goTypes = []interface{}{
	(SlashType)(0),                 // 0: kyve.delegation.v1beta1.SlashType
	(*Delegator)(nil),              // 1: kyve.delegation.v1beta1.Delegator
	(*DelegationEntry)(nil),        // 2: kyve.delegation.v1beta1.DelegationEntry
	(*DelegationData)(nil),         // 3: kyve.delegation.v1beta1.DelegationData
	(*DelegationSlash)(nil),        // 4: kyve.delegation.v1beta1.DelegationSlash
	(*UndelegationQueueEntry)(nil), // 5: kyve.delegation.v1beta1.UndelegationQueueEntry
	(*QueueState)(nil),             // 6: kyve.delegation.v1beta1.QueueState
	(*RedelegationCooldown)(nil),   // 7: kyve.delegation.v1beta1.RedelegationCooldown
}
var file_kyve_delegation_v1beta1_delegation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kyve_delegation_v1beta1_delegation_proto_init() }
func file_kyve_delegation_v1beta1_delegation_proto_init() {
	if File_kyve_delegation_v1beta1_delegation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delegator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationSlash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UndelegationQueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_delegation_v1beta1_delegation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedelegationCooldown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kyve_delegation_v1beta1_delegation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kyve_delegation_v1beta1_delegation_proto_goTypes,
		DependencyIndexes: file_kyve_delegation_v1beta1_delegation_proto_depIdxs,
		EnumInfos:         file_kyve_delegation_v1beta1_delegation_proto_enumTypes,
		MessageInfos:      file_kyve_delegation_v1beta1_delegation_proto_msgTypes,
	}.Build()
	File_kyve_delegation_v1beta1_delegation_proto = out.File
	file_kyve_delegation_v1beta1_delegation_proto_rawDesc = nil
	file_kyve_delegation_v1beta1_delegation_proto_goTypes = nil
	file_kyve_delegation_v1beta1_delegation_proto_depIdxs = nil
}
