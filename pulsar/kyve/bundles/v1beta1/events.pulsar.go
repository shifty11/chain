// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package bundlesv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_EventUpdateParams            protoreflect.MessageDescriptor
	fd_EventUpdateParams_old_params protoreflect.FieldDescriptor
	fd_EventUpdateParams_new_params protoreflect.FieldDescriptor
	fd_EventUpdateParams_payload    protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventUpdateParams = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventUpdateParams")
	fd_EventUpdateParams_old_params = md_EventUpdateParams.Fields().ByName("old_params")
	fd_EventUpdateParams_new_params = md_EventUpdateParams.Fields().ByName("new_params")
	fd_EventUpdateParams_payload = md_EventUpdateParams.Fields().ByName("payload")
}

var _ protoreflect.Message = (*fastReflection_EventUpdateParams)(nil)

type fastReflection_EventUpdateParams EventUpdateParams

func (x *EventUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventUpdateParams)(x)
}

func (x *EventUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventUpdateParams_messageType fastReflection_EventUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_EventUpdateParams_messageType{}

type fastReflection_EventUpdateParams_messageType struct{}

func (x fastReflection_EventUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventUpdateParams)(nil)
}
func (x fastReflection_EventUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_EventUpdateParams)
}
func (x fastReflection_EventUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_EventUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_EventUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventUpdateParams) New() protoreflect.Message {
	return new(fastReflection_EventUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*EventUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OldParams != nil {
		value := protoreflect.ValueOfMessage(x.OldParams.ProtoReflect())
		if !f(fd_EventUpdateParams_old_params, value) {
			return
		}
	}
	if x.NewParams != nil {
		value := protoreflect.ValueOfMessage(x.NewParams.ProtoReflect())
		if !f(fd_EventUpdateParams_new_params, value) {
			return
		}
	}
	if x.Payload != "" {
		value := protoreflect.ValueOfString(x.Payload)
		if !f(fd_EventUpdateParams_payload, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		return x.OldParams != nil
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		return x.NewParams != nil
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		return x.Payload != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		x.OldParams = nil
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		x.NewParams = nil
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		x.Payload = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		value := x.OldParams
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		value := x.NewParams
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		value := x.Payload
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		x.OldParams = value.Message().Interface().(*Params)
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		x.NewParams = value.Message().Interface().(*Params)
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		x.Payload = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		if x.OldParams == nil {
			x.OldParams = new(Params)
		}
		return protoreflect.ValueOfMessage(x.OldParams.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		if x.NewParams == nil {
			x.NewParams = new(Params)
		}
		return protoreflect.ValueOfMessage(x.NewParams.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		panic(fmt.Errorf("field payload of message kyve.bundles.v1beta1.EventUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventUpdateParams.old_params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.new_params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "kyve.bundles.v1beta1.EventUpdateParams.payload":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventUpdateParams"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.OldParams != nil {
			l = options.Size(x.OldParams)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NewParams != nil {
			l = options.Size(x.NewParams)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Payload)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Payload) > 0 {
			i -= len(x.Payload)
			copy(dAtA[i:], x.Payload)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Payload)))
			i--
			dAtA[i] = 0x1a
		}
		if x.NewParams != nil {
			encoded, err := options.Marshal(x.NewParams)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.OldParams != nil {
			encoded, err := options.Marshal(x.OldParams)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OldParams", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.OldParams == nil {
					x.OldParams = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.OldParams); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewParams", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.NewParams == nil {
					x.NewParams = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.NewParams); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Payload = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventBundleVote            protoreflect.MessageDescriptor
	fd_EventBundleVote_pool_id    protoreflect.FieldDescriptor
	fd_EventBundleVote_staker     protoreflect.FieldDescriptor
	fd_EventBundleVote_storage_id protoreflect.FieldDescriptor
	fd_EventBundleVote_vote       protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventBundleVote = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventBundleVote")
	fd_EventBundleVote_pool_id = md_EventBundleVote.Fields().ByName("pool_id")
	fd_EventBundleVote_staker = md_EventBundleVote.Fields().ByName("staker")
	fd_EventBundleVote_storage_id = md_EventBundleVote.Fields().ByName("storage_id")
	fd_EventBundleVote_vote = md_EventBundleVote.Fields().ByName("vote")
}

var _ protoreflect.Message = (*fastReflection_EventBundleVote)(nil)

type fastReflection_EventBundleVote EventBundleVote

func (x *EventBundleVote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventBundleVote)(x)
}

func (x *EventBundleVote) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventBundleVote_messageType fastReflection_EventBundleVote_messageType
var _ protoreflect.MessageType = fastReflection_EventBundleVote_messageType{}

type fastReflection_EventBundleVote_messageType struct{}

func (x fastReflection_EventBundleVote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventBundleVote)(nil)
}
func (x fastReflection_EventBundleVote_messageType) New() protoreflect.Message {
	return new(fastReflection_EventBundleVote)
}
func (x fastReflection_EventBundleVote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleVote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventBundleVote) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleVote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventBundleVote) Type() protoreflect.MessageType {
	return _fastReflection_EventBundleVote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventBundleVote) New() protoreflect.Message {
	return new(fastReflection_EventBundleVote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventBundleVote) Interface() protoreflect.ProtoMessage {
	return (*EventBundleVote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventBundleVote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventBundleVote_pool_id, value) {
			return
		}
	}
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_EventBundleVote_staker, value) {
			return
		}
	}
	if x.StorageId != "" {
		value := protoreflect.ValueOfString(x.StorageId)
		if !f(fd_EventBundleVote_storage_id, value) {
			return
		}
	}
	if x.Vote != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Vote))
		if !f(fd_EventBundleVote_vote, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventBundleVote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		return x.Staker != ""
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		return x.StorageId != ""
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		return x.Vote != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleVote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		x.Staker = ""
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		x.StorageId = ""
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		x.Vote = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventBundleVote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		value := x.StorageId
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		value := x.Vote
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleVote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		x.Staker = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		x.StorageId = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		x.Vote = (VoteType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleVote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventBundleVote is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		panic(fmt.Errorf("field staker of message kyve.bundles.v1beta1.EventBundleVote is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		panic(fmt.Errorf("field storage_id of message kyve.bundles.v1beta1.EventBundleVote is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		panic(fmt.Errorf("field vote of message kyve.bundles.v1beta1.EventBundleVote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventBundleVote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleVote.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleVote.staker":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleVote.storage_id":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleVote.vote":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleVote"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleVote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventBundleVote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventBundleVote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventBundleVote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleVote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventBundleVote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventBundleVote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventBundleVote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StorageId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Vote != 0 {
			n += 1 + runtime.Sov(uint64(x.Vote))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleVote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Vote != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Vote))
			i--
			dAtA[i] = 0x20
		}
		if len(x.StorageId) > 0 {
			i -= len(x.StorageId)
			copy(dAtA[i:], x.StorageId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StorageId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleVote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleVote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleVote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StorageId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
				}
				x.Vote = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Vote |= VoteType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventBundleProposed                     protoreflect.MessageDescriptor
	fd_EventBundleProposed_pool_id             protoreflect.FieldDescriptor
	fd_EventBundleProposed_id                  protoreflect.FieldDescriptor
	fd_EventBundleProposed_storage_id          protoreflect.FieldDescriptor
	fd_EventBundleProposed_uploader            protoreflect.FieldDescriptor
	fd_EventBundleProposed_data_size           protoreflect.FieldDescriptor
	fd_EventBundleProposed_from_index          protoreflect.FieldDescriptor
	fd_EventBundleProposed_bundle_size         protoreflect.FieldDescriptor
	fd_EventBundleProposed_from_key            protoreflect.FieldDescriptor
	fd_EventBundleProposed_to_key              protoreflect.FieldDescriptor
	fd_EventBundleProposed_bundle_summary      protoreflect.FieldDescriptor
	fd_EventBundleProposed_data_hash           protoreflect.FieldDescriptor
	fd_EventBundleProposed_proposed_at         protoreflect.FieldDescriptor
	fd_EventBundleProposed_storage_provider_id protoreflect.FieldDescriptor
	fd_EventBundleProposed_compression_id      protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventBundleProposed = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventBundleProposed")
	fd_EventBundleProposed_pool_id = md_EventBundleProposed.Fields().ByName("pool_id")
	fd_EventBundleProposed_id = md_EventBundleProposed.Fields().ByName("id")
	fd_EventBundleProposed_storage_id = md_EventBundleProposed.Fields().ByName("storage_id")
	fd_EventBundleProposed_uploader = md_EventBundleProposed.Fields().ByName("uploader")
	fd_EventBundleProposed_data_size = md_EventBundleProposed.Fields().ByName("data_size")
	fd_EventBundleProposed_from_index = md_EventBundleProposed.Fields().ByName("from_index")
	fd_EventBundleProposed_bundle_size = md_EventBundleProposed.Fields().ByName("bundle_size")
	fd_EventBundleProposed_from_key = md_EventBundleProposed.Fields().ByName("from_key")
	fd_EventBundleProposed_to_key = md_EventBundleProposed.Fields().ByName("to_key")
	fd_EventBundleProposed_bundle_summary = md_EventBundleProposed.Fields().ByName("bundle_summary")
	fd_EventBundleProposed_data_hash = md_EventBundleProposed.Fields().ByName("data_hash")
	fd_EventBundleProposed_proposed_at = md_EventBundleProposed.Fields().ByName("proposed_at")
	fd_EventBundleProposed_storage_provider_id = md_EventBundleProposed.Fields().ByName("storage_provider_id")
	fd_EventBundleProposed_compression_id = md_EventBundleProposed.Fields().ByName("compression_id")
}

var _ protoreflect.Message = (*fastReflection_EventBundleProposed)(nil)

type fastReflection_EventBundleProposed EventBundleProposed

func (x *EventBundleProposed) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventBundleProposed)(x)
}

func (x *EventBundleProposed) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventBundleProposed_messageType fastReflection_EventBundleProposed_messageType
var _ protoreflect.MessageType = fastReflection_EventBundleProposed_messageType{}

type fastReflection_EventBundleProposed_messageType struct{}

func (x fastReflection_EventBundleProposed_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventBundleProposed)(nil)
}
func (x fastReflection_EventBundleProposed_messageType) New() protoreflect.Message {
	return new(fastReflection_EventBundleProposed)
}
func (x fastReflection_EventBundleProposed_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleProposed
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventBundleProposed) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleProposed
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventBundleProposed) Type() protoreflect.MessageType {
	return _fastReflection_EventBundleProposed_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventBundleProposed) New() protoreflect.Message {
	return new(fastReflection_EventBundleProposed)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventBundleProposed) Interface() protoreflect.ProtoMessage {
	return (*EventBundleProposed)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventBundleProposed) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventBundleProposed_pool_id, value) {
			return
		}
	}
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventBundleProposed_id, value) {
			return
		}
	}
	if x.StorageId != "" {
		value := protoreflect.ValueOfString(x.StorageId)
		if !f(fd_EventBundleProposed_storage_id, value) {
			return
		}
	}
	if x.Uploader != "" {
		value := protoreflect.ValueOfString(x.Uploader)
		if !f(fd_EventBundleProposed_uploader, value) {
			return
		}
	}
	if x.DataSize != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DataSize)
		if !f(fd_EventBundleProposed_data_size, value) {
			return
		}
	}
	if x.FromIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FromIndex)
		if !f(fd_EventBundleProposed_from_index, value) {
			return
		}
	}
	if x.BundleSize != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BundleSize)
		if !f(fd_EventBundleProposed_bundle_size, value) {
			return
		}
	}
	if x.FromKey != "" {
		value := protoreflect.ValueOfString(x.FromKey)
		if !f(fd_EventBundleProposed_from_key, value) {
			return
		}
	}
	if x.ToKey != "" {
		value := protoreflect.ValueOfString(x.ToKey)
		if !f(fd_EventBundleProposed_to_key, value) {
			return
		}
	}
	if x.BundleSummary != "" {
		value := protoreflect.ValueOfString(x.BundleSummary)
		if !f(fd_EventBundleProposed_bundle_summary, value) {
			return
		}
	}
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_EventBundleProposed_data_hash, value) {
			return
		}
	}
	if x.ProposedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProposedAt)
		if !f(fd_EventBundleProposed_proposed_at, value) {
			return
		}
	}
	if x.StorageProviderId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.StorageProviderId)
		if !f(fd_EventBundleProposed_storage_provider_id, value) {
			return
		}
	}
	if x.CompressionId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.CompressionId)
		if !f(fd_EventBundleProposed_compression_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventBundleProposed) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		return x.Id != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		return x.StorageId != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		return x.Uploader != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		return x.DataSize != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		return x.FromIndex != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		return x.BundleSize != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		return x.FromKey != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		return x.ToKey != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		return x.BundleSummary != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		return x.DataHash != ""
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		return x.ProposedAt != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		return x.StorageProviderId != uint32(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		return x.CompressionId != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleProposed) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		x.Id = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		x.StorageId = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		x.Uploader = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		x.DataSize = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		x.FromIndex = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		x.BundleSize = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		x.FromKey = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		x.ToKey = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		x.BundleSummary = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		x.DataHash = ""
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		x.ProposedAt = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		x.StorageProviderId = uint32(0)
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		x.CompressionId = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventBundleProposed) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		value := x.StorageId
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		value := x.Uploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		value := x.DataSize
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		value := x.FromIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		value := x.BundleSize
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		value := x.FromKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		value := x.ToKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		value := x.BundleSummary
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		value := x.ProposedAt
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		value := x.StorageProviderId
		return protoreflect.ValueOfUint32(value)
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		value := x.CompressionId
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleProposed) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		x.Id = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		x.StorageId = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		x.Uploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		x.DataSize = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		x.FromIndex = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		x.BundleSize = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		x.FromKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		x.ToKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		x.BundleSummary = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		x.DataHash = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		x.ProposedAt = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		x.StorageProviderId = uint32(value.Uint())
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		x.CompressionId = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleProposed) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		panic(fmt.Errorf("field id of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		panic(fmt.Errorf("field storage_id of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		panic(fmt.Errorf("field uploader of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		panic(fmt.Errorf("field data_size of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		panic(fmt.Errorf("field from_index of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		panic(fmt.Errorf("field bundle_size of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		panic(fmt.Errorf("field from_key of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		panic(fmt.Errorf("field to_key of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		panic(fmt.Errorf("field bundle_summary of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		panic(fmt.Errorf("field data_hash of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		panic(fmt.Errorf("field proposed_at of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		panic(fmt.Errorf("field storage_provider_id of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		panic(fmt.Errorf("field compression_id of message kyve.bundles.v1beta1.EventBundleProposed is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventBundleProposed) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleProposed.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_id":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.data_size":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.from_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_size":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.from_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.to_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.bundle_summary":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.data_hash":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleProposed.proposed_at":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.storage_provider_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "kyve.bundles.v1beta1.EventBundleProposed.compression_id":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleProposed"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleProposed does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventBundleProposed) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventBundleProposed", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventBundleProposed) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleProposed) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventBundleProposed) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventBundleProposed) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventBundleProposed)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.StorageId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Uploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DataSize != 0 {
			n += 1 + runtime.Sov(uint64(x.DataSize))
		}
		if x.FromIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.FromIndex))
		}
		if x.BundleSize != 0 {
			n += 1 + runtime.Sov(uint64(x.BundleSize))
		}
		l = len(x.FromKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ToKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BundleSummary)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProposedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.ProposedAt))
		}
		if x.StorageProviderId != 0 {
			n += 1 + runtime.Sov(uint64(x.StorageProviderId))
		}
		if x.CompressionId != 0 {
			n += 1 + runtime.Sov(uint64(x.CompressionId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleProposed)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CompressionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CompressionId))
			i--
			dAtA[i] = 0x70
		}
		if x.StorageProviderId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StorageProviderId))
			i--
			dAtA[i] = 0x68
		}
		if x.ProposedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProposedAt))
			i--
			dAtA[i] = 0x60
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.BundleSummary) > 0 {
			i -= len(x.BundleSummary)
			copy(dAtA[i:], x.BundleSummary)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BundleSummary)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.ToKey) > 0 {
			i -= len(x.ToKey)
			copy(dAtA[i:], x.ToKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToKey)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.FromKey) > 0 {
			i -= len(x.FromKey)
			copy(dAtA[i:], x.FromKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromKey)))
			i--
			dAtA[i] = 0x42
		}
		if x.BundleSize != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BundleSize))
			i--
			dAtA[i] = 0x38
		}
		if x.FromIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FromIndex))
			i--
			dAtA[i] = 0x30
		}
		if x.DataSize != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DataSize))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Uploader) > 0 {
			i -= len(x.Uploader)
			copy(dAtA[i:], x.Uploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uploader)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.StorageId) > 0 {
			i -= len(x.StorageId)
			copy(dAtA[i:], x.StorageId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StorageId)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x10
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleProposed)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleProposed: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleProposed: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StorageId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataSize", wireType)
				}
				x.DataSize = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DataSize |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromIndex", wireType)
				}
				x.FromIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FromIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundleSize", wireType)
				}
				x.BundleSize = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BundleSize |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundleSummary", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BundleSummary = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProposedAt", wireType)
				}
				x.ProposedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProposedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
				}
				x.StorageProviderId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StorageProviderId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 14:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CompressionId", wireType)
				}
				x.CompressionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CompressionId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventBundleFinalized                   protoreflect.MessageDescriptor
	fd_EventBundleFinalized_pool_id           protoreflect.FieldDescriptor
	fd_EventBundleFinalized_id                protoreflect.FieldDescriptor
	fd_EventBundleFinalized_valid             protoreflect.FieldDescriptor
	fd_EventBundleFinalized_invalid           protoreflect.FieldDescriptor
	fd_EventBundleFinalized_abstain           protoreflect.FieldDescriptor
	fd_EventBundleFinalized_total             protoreflect.FieldDescriptor
	fd_EventBundleFinalized_status            protoreflect.FieldDescriptor
	fd_EventBundleFinalized_funders_payout    protoreflect.FieldDescriptor
	fd_EventBundleFinalized_inflation_payout  protoreflect.FieldDescriptor
	fd_EventBundleFinalized_reward_treasury   protoreflect.FieldDescriptor
	fd_EventBundleFinalized_reward_uploader   protoreflect.FieldDescriptor
	fd_EventBundleFinalized_reward_delegation protoreflect.FieldDescriptor
	fd_EventBundleFinalized_reward_total      protoreflect.FieldDescriptor
	fd_EventBundleFinalized_finalized_at      protoreflect.FieldDescriptor
	fd_EventBundleFinalized_uploader          protoreflect.FieldDescriptor
	fd_EventBundleFinalized_next_uploader     protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventBundleFinalized = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventBundleFinalized")
	fd_EventBundleFinalized_pool_id = md_EventBundleFinalized.Fields().ByName("pool_id")
	fd_EventBundleFinalized_id = md_EventBundleFinalized.Fields().ByName("id")
	fd_EventBundleFinalized_valid = md_EventBundleFinalized.Fields().ByName("valid")
	fd_EventBundleFinalized_invalid = md_EventBundleFinalized.Fields().ByName("invalid")
	fd_EventBundleFinalized_abstain = md_EventBundleFinalized.Fields().ByName("abstain")
	fd_EventBundleFinalized_total = md_EventBundleFinalized.Fields().ByName("total")
	fd_EventBundleFinalized_status = md_EventBundleFinalized.Fields().ByName("status")
	fd_EventBundleFinalized_funders_payout = md_EventBundleFinalized.Fields().ByName("funders_payout")
	fd_EventBundleFinalized_inflation_payout = md_EventBundleFinalized.Fields().ByName("inflation_payout")
	fd_EventBundleFinalized_reward_treasury = md_EventBundleFinalized.Fields().ByName("reward_treasury")
	fd_EventBundleFinalized_reward_uploader = md_EventBundleFinalized.Fields().ByName("reward_uploader")
	fd_EventBundleFinalized_reward_delegation = md_EventBundleFinalized.Fields().ByName("reward_delegation")
	fd_EventBundleFinalized_reward_total = md_EventBundleFinalized.Fields().ByName("reward_total")
	fd_EventBundleFinalized_finalized_at = md_EventBundleFinalized.Fields().ByName("finalized_at")
	fd_EventBundleFinalized_uploader = md_EventBundleFinalized.Fields().ByName("uploader")
	fd_EventBundleFinalized_next_uploader = md_EventBundleFinalized.Fields().ByName("next_uploader")
}

var _ protoreflect.Message = (*fastReflection_EventBundleFinalized)(nil)

type fastReflection_EventBundleFinalized EventBundleFinalized

func (x *EventBundleFinalized) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventBundleFinalized)(x)
}

func (x *EventBundleFinalized) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventBundleFinalized_messageType fastReflection_EventBundleFinalized_messageType
var _ protoreflect.MessageType = fastReflection_EventBundleFinalized_messageType{}

type fastReflection_EventBundleFinalized_messageType struct{}

func (x fastReflection_EventBundleFinalized_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventBundleFinalized)(nil)
}
func (x fastReflection_EventBundleFinalized_messageType) New() protoreflect.Message {
	return new(fastReflection_EventBundleFinalized)
}
func (x fastReflection_EventBundleFinalized_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleFinalized
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventBundleFinalized) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBundleFinalized
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventBundleFinalized) Type() protoreflect.MessageType {
	return _fastReflection_EventBundleFinalized_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventBundleFinalized) New() protoreflect.Message {
	return new(fastReflection_EventBundleFinalized)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventBundleFinalized) Interface() protoreflect.ProtoMessage {
	return (*EventBundleFinalized)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventBundleFinalized) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventBundleFinalized_pool_id, value) {
			return
		}
	}
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventBundleFinalized_id, value) {
			return
		}
	}
	if x.Valid != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Valid)
		if !f(fd_EventBundleFinalized_valid, value) {
			return
		}
	}
	if x.Invalid != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Invalid)
		if !f(fd_EventBundleFinalized_invalid, value) {
			return
		}
	}
	if x.Abstain != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Abstain)
		if !f(fd_EventBundleFinalized_abstain, value) {
			return
		}
	}
	if x.Total != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Total)
		if !f(fd_EventBundleFinalized_total, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_EventBundleFinalized_status, value) {
			return
		}
	}
	if x.FundersPayout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FundersPayout)
		if !f(fd_EventBundleFinalized_funders_payout, value) {
			return
		}
	}
	if x.InflationPayout != uint64(0) {
		value := protoreflect.ValueOfUint64(x.InflationPayout)
		if !f(fd_EventBundleFinalized_inflation_payout, value) {
			return
		}
	}
	if x.RewardTreasury != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardTreasury)
		if !f(fd_EventBundleFinalized_reward_treasury, value) {
			return
		}
	}
	if x.RewardUploader != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardUploader)
		if !f(fd_EventBundleFinalized_reward_uploader, value) {
			return
		}
	}
	if x.RewardDelegation != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardDelegation)
		if !f(fd_EventBundleFinalized_reward_delegation, value) {
			return
		}
	}
	if x.RewardTotal != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RewardTotal)
		if !f(fd_EventBundleFinalized_reward_total, value) {
			return
		}
	}
	if x.FinalizedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FinalizedAt)
		if !f(fd_EventBundleFinalized_finalized_at, value) {
			return
		}
	}
	if x.Uploader != "" {
		value := protoreflect.ValueOfString(x.Uploader)
		if !f(fd_EventBundleFinalized_uploader, value) {
			return
		}
	}
	if x.NextUploader != "" {
		value := protoreflect.ValueOfString(x.NextUploader)
		if !f(fd_EventBundleFinalized_next_uploader, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventBundleFinalized) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		return x.Id != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		return x.Valid != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		return x.Invalid != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		return x.Abstain != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		return x.Total != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		return x.Status != 0
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		return x.FundersPayout != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		return x.InflationPayout != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		return x.RewardTreasury != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		return x.RewardUploader != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		return x.RewardDelegation != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		return x.RewardTotal != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		return x.FinalizedAt != uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		return x.Uploader != ""
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		return x.NextUploader != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleFinalized) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		x.Id = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		x.Valid = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		x.Invalid = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		x.Abstain = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		x.Total = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		x.Status = 0
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		x.FundersPayout = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		x.InflationPayout = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		x.RewardTreasury = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		x.RewardUploader = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		x.RewardDelegation = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		x.RewardTotal = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		x.FinalizedAt = uint64(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		x.Uploader = ""
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		x.NextUploader = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventBundleFinalized) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		value := x.Valid
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		value := x.Invalid
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		value := x.Abstain
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		value := x.Total
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		value := x.FundersPayout
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		value := x.InflationPayout
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		value := x.RewardTreasury
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		value := x.RewardUploader
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		value := x.RewardDelegation
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		value := x.RewardTotal
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		value := x.FinalizedAt
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		value := x.Uploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		value := x.NextUploader
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleFinalized) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		x.Id = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		x.Valid = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		x.Invalid = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		x.Abstain = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		x.Total = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		x.Status = (BundleStatus)(value.Enum())
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		x.FundersPayout = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		x.InflationPayout = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		x.RewardTreasury = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		x.RewardUploader = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		x.RewardDelegation = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		x.RewardTotal = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		x.FinalizedAt = value.Uint()
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		x.Uploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		x.NextUploader = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleFinalized) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		panic(fmt.Errorf("field id of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		panic(fmt.Errorf("field valid of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		panic(fmt.Errorf("field invalid of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		panic(fmt.Errorf("field abstain of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		panic(fmt.Errorf("field total of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		panic(fmt.Errorf("field status of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		panic(fmt.Errorf("field funders_payout of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		panic(fmt.Errorf("field inflation_payout of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		panic(fmt.Errorf("field reward_treasury of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		panic(fmt.Errorf("field reward_uploader of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		panic(fmt.Errorf("field reward_delegation of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		panic(fmt.Errorf("field reward_total of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		panic(fmt.Errorf("field finalized_at of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		panic(fmt.Errorf("field uploader of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		panic(fmt.Errorf("field next_uploader of message kyve.bundles.v1beta1.EventBundleFinalized is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventBundleFinalized) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventBundleFinalized.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.valid":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.invalid":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.abstain":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.total":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.status":
		return protoreflect.ValueOfEnum(0)
	case "kyve.bundles.v1beta1.EventBundleFinalized.funders_payout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.inflation_payout":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_treasury":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_uploader":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_delegation":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.reward_total":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.finalized_at":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventBundleFinalized.uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventBundleFinalized.next_uploader":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventBundleFinalized"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventBundleFinalized does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventBundleFinalized) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventBundleFinalized", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventBundleFinalized) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBundleFinalized) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventBundleFinalized) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventBundleFinalized) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventBundleFinalized)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.Valid != 0 {
			n += 1 + runtime.Sov(uint64(x.Valid))
		}
		if x.Invalid != 0 {
			n += 1 + runtime.Sov(uint64(x.Invalid))
		}
		if x.Abstain != 0 {
			n += 1 + runtime.Sov(uint64(x.Abstain))
		}
		if x.Total != 0 {
			n += 1 + runtime.Sov(uint64(x.Total))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.FundersPayout != 0 {
			n += 1 + runtime.Sov(uint64(x.FundersPayout))
		}
		if x.InflationPayout != 0 {
			n += 1 + runtime.Sov(uint64(x.InflationPayout))
		}
		if x.RewardTreasury != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardTreasury))
		}
		if x.RewardUploader != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardUploader))
		}
		if x.RewardDelegation != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardDelegation))
		}
		if x.RewardTotal != 0 {
			n += 1 + runtime.Sov(uint64(x.RewardTotal))
		}
		if x.FinalizedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.FinalizedAt))
		}
		l = len(x.Uploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NextUploader)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleFinalized)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NextUploader) > 0 {
			i -= len(x.NextUploader)
			copy(dAtA[i:], x.NextUploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NextUploader)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.Uploader) > 0 {
			i -= len(x.Uploader)
			copy(dAtA[i:], x.Uploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uploader)))
			i--
			dAtA[i] = 0x7a
		}
		if x.FinalizedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FinalizedAt))
			i--
			dAtA[i] = 0x70
		}
		if x.RewardTotal != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardTotal))
			i--
			dAtA[i] = 0x68
		}
		if x.RewardDelegation != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardDelegation))
			i--
			dAtA[i] = 0x60
		}
		if x.RewardUploader != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardUploader))
			i--
			dAtA[i] = 0x58
		}
		if x.RewardTreasury != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RewardTreasury))
			i--
			dAtA[i] = 0x50
		}
		if x.InflationPayout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InflationPayout))
			i--
			dAtA[i] = 0x48
		}
		if x.FundersPayout != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FundersPayout))
			i--
			dAtA[i] = 0x40
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x38
		}
		if x.Total != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Total))
			i--
			dAtA[i] = 0x30
		}
		if x.Abstain != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Abstain))
			i--
			dAtA[i] = 0x28
		}
		if x.Invalid != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Invalid))
			i--
			dAtA[i] = 0x20
		}
		if x.Valid != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Valid))
			i--
			dAtA[i] = 0x18
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x10
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventBundleFinalized)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleFinalized: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBundleFinalized: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Valid", wireType)
				}
				x.Valid = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Valid |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Invalid", wireType)
				}
				x.Invalid = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Invalid |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Abstain", wireType)
				}
				x.Abstain = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Abstain |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
				}
				x.Total = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Total |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= BundleStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FundersPayout", wireType)
				}
				x.FundersPayout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FundersPayout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InflationPayout", wireType)
				}
				x.InflationPayout = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InflationPayout |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardTreasury", wireType)
				}
				x.RewardTreasury = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardTreasury |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardUploader", wireType)
				}
				x.RewardUploader = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardUploader |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardDelegation", wireType)
				}
				x.RewardDelegation = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardDelegation |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardTotal", wireType)
				}
				x.RewardTotal = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RewardTotal |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 14:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalizedAt", wireType)
				}
				x.FinalizedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FinalizedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextUploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NextUploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventClaimedUploaderRole              protoreflect.MessageDescriptor
	fd_EventClaimedUploaderRole_pool_id      protoreflect.FieldDescriptor
	fd_EventClaimedUploaderRole_id           protoreflect.FieldDescriptor
	fd_EventClaimedUploaderRole_new_uploader protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventClaimedUploaderRole = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventClaimedUploaderRole")
	fd_EventClaimedUploaderRole_pool_id = md_EventClaimedUploaderRole.Fields().ByName("pool_id")
	fd_EventClaimedUploaderRole_id = md_EventClaimedUploaderRole.Fields().ByName("id")
	fd_EventClaimedUploaderRole_new_uploader = md_EventClaimedUploaderRole.Fields().ByName("new_uploader")
}

var _ protoreflect.Message = (*fastReflection_EventClaimedUploaderRole)(nil)

type fastReflection_EventClaimedUploaderRole EventClaimedUploaderRole

func (x *EventClaimedUploaderRole) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventClaimedUploaderRole)(x)
}

func (x *EventClaimedUploaderRole) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventClaimedUploaderRole_messageType fastReflection_EventClaimedUploaderRole_messageType
var _ protoreflect.MessageType = fastReflection_EventClaimedUploaderRole_messageType{}

type fastReflection_EventClaimedUploaderRole_messageType struct{}

func (x fastReflection_EventClaimedUploaderRole_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventClaimedUploaderRole)(nil)
}
func (x fastReflection_EventClaimedUploaderRole_messageType) New() protoreflect.Message {
	return new(fastReflection_EventClaimedUploaderRole)
}
func (x fastReflection_EventClaimedUploaderRole_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventClaimedUploaderRole
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventClaimedUploaderRole) Descriptor() protoreflect.MessageDescriptor {
	return md_EventClaimedUploaderRole
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventClaimedUploaderRole) Type() protoreflect.MessageType {
	return _fastReflection_EventClaimedUploaderRole_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventClaimedUploaderRole) New() protoreflect.Message {
	return new(fastReflection_EventClaimedUploaderRole)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventClaimedUploaderRole) Interface() protoreflect.ProtoMessage {
	return (*EventClaimedUploaderRole)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventClaimedUploaderRole) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventClaimedUploaderRole_pool_id, value) {
			return
		}
	}
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventClaimedUploaderRole_id, value) {
			return
		}
	}
	if x.NewUploader != "" {
		value := protoreflect.ValueOfString(x.NewUploader)
		if !f(fd_EventClaimedUploaderRole_new_uploader, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventClaimedUploaderRole) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		return x.Id != uint64(0)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		return x.NewUploader != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventClaimedUploaderRole) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		x.Id = uint64(0)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		x.NewUploader = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventClaimedUploaderRole) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		value := x.NewUploader
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventClaimedUploaderRole) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		x.Id = value.Uint()
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		x.NewUploader = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventClaimedUploaderRole) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventClaimedUploaderRole is not mutable"))
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		panic(fmt.Errorf("field id of message kyve.bundles.v1beta1.EventClaimedUploaderRole is not mutable"))
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		panic(fmt.Errorf("field new_uploader of message kyve.bundles.v1beta1.EventClaimedUploaderRole is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventClaimedUploaderRole) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventClaimedUploaderRole.new_uploader":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventClaimedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventClaimedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventClaimedUploaderRole) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventClaimedUploaderRole", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventClaimedUploaderRole) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventClaimedUploaderRole) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventClaimedUploaderRole) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventClaimedUploaderRole) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventClaimedUploaderRole)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.NewUploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventClaimedUploaderRole)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NewUploader) > 0 {
			i -= len(x.NewUploader)
			copy(dAtA[i:], x.NewUploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewUploader)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x10
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventClaimedUploaderRole)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventClaimedUploaderRole: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventClaimedUploaderRole: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewUploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewUploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventSkippedUploaderRole                   protoreflect.MessageDescriptor
	fd_EventSkippedUploaderRole_pool_id           protoreflect.FieldDescriptor
	fd_EventSkippedUploaderRole_id                protoreflect.FieldDescriptor
	fd_EventSkippedUploaderRole_previous_uploader protoreflect.FieldDescriptor
	fd_EventSkippedUploaderRole_new_uploader      protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventSkippedUploaderRole = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventSkippedUploaderRole")
	fd_EventSkippedUploaderRole_pool_id = md_EventSkippedUploaderRole.Fields().ByName("pool_id")
	fd_EventSkippedUploaderRole_id = md_EventSkippedUploaderRole.Fields().ByName("id")
	fd_EventSkippedUploaderRole_previous_uploader = md_EventSkippedUploaderRole.Fields().ByName("previous_uploader")
	fd_EventSkippedUploaderRole_new_uploader = md_EventSkippedUploaderRole.Fields().ByName("new_uploader")
}

var _ protoreflect.Message = (*fastReflection_EventSkippedUploaderRole)(nil)

type fastReflection_EventSkippedUploaderRole EventSkippedUploaderRole

func (x *EventSkippedUploaderRole) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventSkippedUploaderRole)(x)
}

func (x *EventSkippedUploaderRole) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventSkippedUploaderRole_messageType fastReflection_EventSkippedUploaderRole_messageType
var _ protoreflect.MessageType = fastReflection_EventSkippedUploaderRole_messageType{}

type fastReflection_EventSkippedUploaderRole_messageType struct{}

func (x fastReflection_EventSkippedUploaderRole_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventSkippedUploaderRole)(nil)
}
func (x fastReflection_EventSkippedUploaderRole_messageType) New() protoreflect.Message {
	return new(fastReflection_EventSkippedUploaderRole)
}
func (x fastReflection_EventSkippedUploaderRole_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventSkippedUploaderRole
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventSkippedUploaderRole) Descriptor() protoreflect.MessageDescriptor {
	return md_EventSkippedUploaderRole
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventSkippedUploaderRole) Type() protoreflect.MessageType {
	return _fastReflection_EventSkippedUploaderRole_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventSkippedUploaderRole) New() protoreflect.Message {
	return new(fastReflection_EventSkippedUploaderRole)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventSkippedUploaderRole) Interface() protoreflect.ProtoMessage {
	return (*EventSkippedUploaderRole)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventSkippedUploaderRole) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventSkippedUploaderRole_pool_id, value) {
			return
		}
	}
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_EventSkippedUploaderRole_id, value) {
			return
		}
	}
	if x.PreviousUploader != "" {
		value := protoreflect.ValueOfString(x.PreviousUploader)
		if !f(fd_EventSkippedUploaderRole_previous_uploader, value) {
			return
		}
	}
	if x.NewUploader != "" {
		value := protoreflect.ValueOfString(x.NewUploader)
		if !f(fd_EventSkippedUploaderRole_new_uploader, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventSkippedUploaderRole) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		return x.Id != uint64(0)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		return x.PreviousUploader != ""
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		return x.NewUploader != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSkippedUploaderRole) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		x.Id = uint64(0)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		x.PreviousUploader = ""
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		x.NewUploader = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventSkippedUploaderRole) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		value := x.PreviousUploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		value := x.NewUploader
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSkippedUploaderRole) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		x.Id = value.Uint()
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		x.PreviousUploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		x.NewUploader = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSkippedUploaderRole) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventSkippedUploaderRole is not mutable"))
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		panic(fmt.Errorf("field id of message kyve.bundles.v1beta1.EventSkippedUploaderRole is not mutable"))
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		panic(fmt.Errorf("field previous_uploader of message kyve.bundles.v1beta1.EventSkippedUploaderRole is not mutable"))
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		panic(fmt.Errorf("field new_uploader of message kyve.bundles.v1beta1.EventSkippedUploaderRole is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventSkippedUploaderRole) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.previous_uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventSkippedUploaderRole.new_uploader":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventSkippedUploaderRole"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventSkippedUploaderRole does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventSkippedUploaderRole) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventSkippedUploaderRole", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventSkippedUploaderRole) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSkippedUploaderRole) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventSkippedUploaderRole) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventSkippedUploaderRole) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventSkippedUploaderRole)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.PreviousUploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NewUploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventSkippedUploaderRole)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NewUploader) > 0 {
			i -= len(x.NewUploader)
			copy(dAtA[i:], x.NewUploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewUploader)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.PreviousUploader) > 0 {
			i -= len(x.PreviousUploader)
			copy(dAtA[i:], x.PreviousUploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PreviousUploader)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x10
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventSkippedUploaderRole)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventSkippedUploaderRole: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventSkippedUploaderRole: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousUploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousUploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewUploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewUploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventPointIncreased                protoreflect.MessageDescriptor
	fd_EventPointIncreased_pool_id        protoreflect.FieldDescriptor
	fd_EventPointIncreased_staker         protoreflect.FieldDescriptor
	fd_EventPointIncreased_current_points protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventPointIncreased = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventPointIncreased")
	fd_EventPointIncreased_pool_id = md_EventPointIncreased.Fields().ByName("pool_id")
	fd_EventPointIncreased_staker = md_EventPointIncreased.Fields().ByName("staker")
	fd_EventPointIncreased_current_points = md_EventPointIncreased.Fields().ByName("current_points")
}

var _ protoreflect.Message = (*fastReflection_EventPointIncreased)(nil)

type fastReflection_EventPointIncreased EventPointIncreased

func (x *EventPointIncreased) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventPointIncreased)(x)
}

func (x *EventPointIncreased) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventPointIncreased_messageType fastReflection_EventPointIncreased_messageType
var _ protoreflect.MessageType = fastReflection_EventPointIncreased_messageType{}

type fastReflection_EventPointIncreased_messageType struct{}

func (x fastReflection_EventPointIncreased_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventPointIncreased)(nil)
}
func (x fastReflection_EventPointIncreased_messageType) New() protoreflect.Message {
	return new(fastReflection_EventPointIncreased)
}
func (x fastReflection_EventPointIncreased_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPointIncreased
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventPointIncreased) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPointIncreased
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventPointIncreased) Type() protoreflect.MessageType {
	return _fastReflection_EventPointIncreased_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventPointIncreased) New() protoreflect.Message {
	return new(fastReflection_EventPointIncreased)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventPointIncreased) Interface() protoreflect.ProtoMessage {
	return (*EventPointIncreased)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventPointIncreased) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventPointIncreased_pool_id, value) {
			return
		}
	}
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_EventPointIncreased_staker, value) {
			return
		}
	}
	if x.CurrentPoints != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentPoints)
		if !f(fd_EventPointIncreased_current_points, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventPointIncreased) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		return x.Staker != ""
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		return x.CurrentPoints != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointIncreased) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		x.Staker = ""
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		x.CurrentPoints = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventPointIncreased) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		value := x.CurrentPoints
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointIncreased) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		x.Staker = value.Interface().(string)
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		x.CurrentPoints = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointIncreased) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventPointIncreased is not mutable"))
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		panic(fmt.Errorf("field staker of message kyve.bundles.v1beta1.EventPointIncreased is not mutable"))
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		panic(fmt.Errorf("field current_points of message kyve.bundles.v1beta1.EventPointIncreased is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventPointIncreased) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointIncreased.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventPointIncreased.staker":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.EventPointIncreased.current_points":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointIncreased"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointIncreased does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventPointIncreased) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventPointIncreased", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventPointIncreased) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointIncreased) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventPointIncreased) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventPointIncreased) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventPointIncreased)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CurrentPoints != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentPoints))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventPointIncreased)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CurrentPoints != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentPoints))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventPointIncreased)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPointIncreased: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPointIncreased: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentPoints", wireType)
				}
				x.CurrentPoints = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentPoints |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventPointsReset         protoreflect.MessageDescriptor
	fd_EventPointsReset_pool_id protoreflect.FieldDescriptor
	fd_EventPointsReset_staker  protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_events_proto_init()
	md_EventPointsReset = File_kyve_bundles_v1beta1_events_proto.Messages().ByName("EventPointsReset")
	fd_EventPointsReset_pool_id = md_EventPointsReset.Fields().ByName("pool_id")
	fd_EventPointsReset_staker = md_EventPointsReset.Fields().ByName("staker")
}

var _ protoreflect.Message = (*fastReflection_EventPointsReset)(nil)

type fastReflection_EventPointsReset EventPointsReset

func (x *EventPointsReset) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventPointsReset)(x)
}

func (x *EventPointsReset) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventPointsReset_messageType fastReflection_EventPointsReset_messageType
var _ protoreflect.MessageType = fastReflection_EventPointsReset_messageType{}

type fastReflection_EventPointsReset_messageType struct{}

func (x fastReflection_EventPointsReset_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventPointsReset)(nil)
}
func (x fastReflection_EventPointsReset_messageType) New() protoreflect.Message {
	return new(fastReflection_EventPointsReset)
}
func (x fastReflection_EventPointsReset_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPointsReset
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventPointsReset) Descriptor() protoreflect.MessageDescriptor {
	return md_EventPointsReset
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventPointsReset) Type() protoreflect.MessageType {
	return _fastReflection_EventPointsReset_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventPointsReset) New() protoreflect.Message {
	return new(fastReflection_EventPointsReset)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventPointsReset) Interface() protoreflect.ProtoMessage {
	return (*EventPointsReset)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventPointsReset) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_EventPointsReset_pool_id, value) {
			return
		}
	}
	if x.Staker != "" {
		value := protoreflect.ValueOfString(x.Staker)
		if !f(fd_EventPointsReset_staker, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventPointsReset) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		return x.Staker != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointsReset) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		x.Staker = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventPointsReset) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		value := x.Staker
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointsReset) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		x.Staker = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointsReset) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.EventPointsReset is not mutable"))
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		panic(fmt.Errorf("field staker of message kyve.bundles.v1beta1.EventPointsReset is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventPointsReset) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.EventPointsReset.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.EventPointsReset.staker":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.EventPointsReset"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.EventPointsReset does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventPointsReset) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.EventPointsReset", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventPointsReset) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventPointsReset) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventPointsReset) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventPointsReset) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventPointsReset)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.Staker)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventPointsReset)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Staker) > 0 {
			i -= len(x.Staker)
			copy(dAtA[i:], x.Staker)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Staker)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventPointsReset)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPointsReset: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventPointsReset: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Staker", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Staker = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: kyve/bundles/v1beta1/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventUpdateParams is an event emitted when the module parameters are updated.
// emitted_by: MsgUpdateParams
type EventUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// old_params is the module's old parameters.
	OldParams *Params `protobuf:"bytes,1,opt,name=old_params,json=oldParams,proto3" json:"old_params,omitempty"`
	// new_params is the module's new parameters.
	NewParams *Params `protobuf:"bytes,2,opt,name=new_params,json=newParams,proto3" json:"new_params,omitempty"`
	// payload is the parameter updates that were performed.
	Payload string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *EventUpdateParams) Reset() {
	*x = EventUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventUpdateParams) ProtoMessage() {}

// Deprecated: Use EventUpdateParams.ProtoReflect.Descriptor instead.
func (*EventUpdateParams) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventUpdateParams) GetOldParams() *Params {
	if x != nil {
		return x.OldParams
	}
	return nil
}

func (x *EventUpdateParams) GetNewParams() *Params {
	if x != nil {
		return x.NewParams
	}
	return nil
}

func (x *EventUpdateParams) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// EventBundleVote is an event emitted when a protocol node votes on a bundle.
// emitted_by: MsgVoteBundleProposal
type EventBundleVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// staker is the account staker of the protocol node.
	Staker string `protobuf:"bytes,2,opt,name=staker,proto3" json:"staker,omitempty"`
	// storage_id is the unique ID of the bundle.
	StorageId string `protobuf:"bytes,3,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// vote is for what the validator voted with
	Vote VoteType `protobuf:"varint,4,opt,name=vote,proto3,enum=kyve.bundles.v1beta1.VoteType" json:"vote,omitempty"`
}

func (x *EventBundleVote) Reset() {
	*x = EventBundleVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBundleVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBundleVote) ProtoMessage() {}

// Deprecated: Use EventBundleVote.ProtoReflect.Descriptor instead.
func (*EventBundleVote) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventBundleVote) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventBundleVote) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *EventBundleVote) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *EventBundleVote) GetVote() VoteType {
	if x != nil {
		return x.Vote
	}
	return VoteType_VOTE_TYPE_UNSPECIFIED
}

// EventBundleProposed is submitted by the MsgSubmitBundleProposal message
// emitted_by: MsgSubmitBundleProposal
type EventBundleProposed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// internal id for the KYVE-bundle
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// storage_id is the ID to retrieve to data item from the configured storage provider
	// e.g. the ARWEAVE-id
	StorageId string `protobuf:"bytes,3,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Address of the uploader/proposer of the bundle
	Uploader string `protobuf:"bytes,4,opt,name=uploader,proto3" json:"uploader,omitempty"`
	// data_size size in bytes of the data
	DataSize uint64 `protobuf:"varint,5,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	// from_index starting index of the bundle (inclusive)
	FromIndex uint64 `protobuf:"varint,6,opt,name=from_index,json=fromIndex,proto3" json:"from_index,omitempty"`
	// bundle_size amount of data items in the bundle
	BundleSize uint64 `protobuf:"varint,7,opt,name=bundle_size,json=bundleSize,proto3" json:"bundle_size,omitempty"`
	// from_key the key of the first data item in the bundle
	FromKey string `protobuf:"bytes,8,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	// to_key the key of the last data item in the bundle
	ToKey string `protobuf:"bytes,9,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	// bundle_summary is a short string holding some useful information of
	// the bundle which will get stored on-chain
	BundleSummary string `protobuf:"bytes,10,opt,name=bundle_summary,json=bundleSummary,proto3" json:"bundle_summary,omitempty"`
	// data_hash is a sha256 hash of the raw compressed data
	DataHash string `protobuf:"bytes,11,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// proposed_at the unix time when the bundle was proposed
	ProposedAt uint64 `protobuf:"varint,12,opt,name=proposed_at,json=proposedAt,proto3" json:"proposed_at,omitempty"`
	// storage_provider_id the unique id of the storage provider where
	// the data of the bundle is tored
	StorageProviderId uint32 `protobuf:"varint,13,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	// compression_id  the unique id of the compression type the data
	// of the bundle was compressed with
	CompressionId uint32 `protobuf:"varint,14,opt,name=compression_id,json=compressionId,proto3" json:"compression_id,omitempty"`
}

func (x *EventBundleProposed) Reset() {
	*x = EventBundleProposed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBundleProposed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBundleProposed) ProtoMessage() {}

// Deprecated: Use EventBundleProposed.ProtoReflect.Descriptor instead.
func (*EventBundleProposed) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventBundleProposed) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventBundleProposed) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventBundleProposed) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *EventBundleProposed) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *EventBundleProposed) GetDataSize() uint64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *EventBundleProposed) GetFromIndex() uint64 {
	if x != nil {
		return x.FromIndex
	}
	return 0
}

func (x *EventBundleProposed) GetBundleSize() uint64 {
	if x != nil {
		return x.BundleSize
	}
	return 0
}

func (x *EventBundleProposed) GetFromKey() string {
	if x != nil {
		return x.FromKey
	}
	return ""
}

func (x *EventBundleProposed) GetToKey() string {
	if x != nil {
		return x.ToKey
	}
	return ""
}

func (x *EventBundleProposed) GetBundleSummary() string {
	if x != nil {
		return x.BundleSummary
	}
	return ""
}

func (x *EventBundleProposed) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *EventBundleProposed) GetProposedAt() uint64 {
	if x != nil {
		return x.ProposedAt
	}
	return 0
}

func (x *EventBundleProposed) GetStorageProviderId() uint32 {
	if x != nil {
		return x.StorageProviderId
	}
	return 0
}

func (x *EventBundleProposed) GetCompressionId() uint32 {
	if x != nil {
		return x.CompressionId
	}
	return 0
}

// EventBundleFinalized is an event emitted when a bundle is finalised.
// emitted_by: MsgSubmitBundleProposal, EndBlock
type EventBundleFinalized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// internal id for the KYVE-bundle
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// total voting power which voted for valid
	Valid uint64 `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	// total voting power which voted for invalid
	Invalid uint64 `protobuf:"varint,4,opt,name=invalid,proto3" json:"invalid,omitempty"`
	// total voting power which voted for abstain
	Abstain uint64 `protobuf:"varint,5,opt,name=abstain,proto3" json:"abstain,omitempty"`
	// total voting power of the pool
	Total uint64 `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	// status of the finalized bundle
	Status BundleStatus `protobuf:"varint,7,opt,name=status,proto3,enum=kyve.bundles.v1beta1.BundleStatus" json:"status,omitempty"`
	// amount which funders provided to the total bundle reward (in ukyve)
	FundersPayout uint64 `protobuf:"varint,8,opt,name=funders_payout,json=fundersPayout,proto3" json:"funders_payout,omitempty"`
	// amount which the inflation pool provided to the total reward (in ukyve)
	InflationPayout uint64 `protobuf:"varint,9,opt,name=inflation_payout,json=inflationPayout,proto3" json:"inflation_payout,omitempty"`
	// rewards transferred to treasury (in ukyve)
	RewardTreasury uint64 `protobuf:"varint,10,opt,name=reward_treasury,json=rewardTreasury,proto3" json:"reward_treasury,omitempty"`
	// rewardUploader rewards directly transferred to uploader (in ukyve)
	RewardUploader uint64 `protobuf:"varint,11,opt,name=reward_uploader,json=rewardUploader,proto3" json:"reward_uploader,omitempty"`
	// rewardDelegation rewards distributed among all delegators (in ukyve)
	RewardDelegation uint64 `protobuf:"varint,12,opt,name=reward_delegation,json=rewardDelegation,proto3" json:"reward_delegation,omitempty"`
	// rewardTotal the total bundle reward
	RewardTotal uint64 `protobuf:"varint,13,opt,name=reward_total,json=rewardTotal,proto3" json:"reward_total,omitempty"`
	// finalized_at the block height where the bundle got finalized
	FinalizedAt uint64 `protobuf:"varint,14,opt,name=finalized_at,json=finalizedAt,proto3" json:"finalized_at,omitempty"`
	// uploader the address of the uploader of this bundle
	Uploader string `protobuf:"bytes,15,opt,name=uploader,proto3" json:"uploader,omitempty"`
	// next_uploader the address of the next uploader after this bundle
	NextUploader string `protobuf:"bytes,16,opt,name=next_uploader,json=nextUploader,proto3" json:"next_uploader,omitempty"`
}

func (x *EventBundleFinalized) Reset() {
	*x = EventBundleFinalized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBundleFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBundleFinalized) ProtoMessage() {}

// Deprecated: Use EventBundleFinalized.ProtoReflect.Descriptor instead.
func (*EventBundleFinalized) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventBundleFinalized) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventBundleFinalized) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventBundleFinalized) GetValid() uint64 {
	if x != nil {
		return x.Valid
	}
	return 0
}

func (x *EventBundleFinalized) GetInvalid() uint64 {
	if x != nil {
		return x.Invalid
	}
	return 0
}

func (x *EventBundleFinalized) GetAbstain() uint64 {
	if x != nil {
		return x.Abstain
	}
	return 0
}

func (x *EventBundleFinalized) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EventBundleFinalized) GetStatus() BundleStatus {
	if x != nil {
		return x.Status
	}
	return BundleStatus_BUNDLE_STATUS_UNSPECIFIED
}

func (x *EventBundleFinalized) GetFundersPayout() uint64 {
	if x != nil {
		return x.FundersPayout
	}
	return 0
}

func (x *EventBundleFinalized) GetInflationPayout() uint64 {
	if x != nil {
		return x.InflationPayout
	}
	return 0
}

func (x *EventBundleFinalized) GetRewardTreasury() uint64 {
	if x != nil {
		return x.RewardTreasury
	}
	return 0
}

func (x *EventBundleFinalized) GetRewardUploader() uint64 {
	if x != nil {
		return x.RewardUploader
	}
	return 0
}

func (x *EventBundleFinalized) GetRewardDelegation() uint64 {
	if x != nil {
		return x.RewardDelegation
	}
	return 0
}

func (x *EventBundleFinalized) GetRewardTotal() uint64 {
	if x != nil {
		return x.RewardTotal
	}
	return 0
}

func (x *EventBundleFinalized) GetFinalizedAt() uint64 {
	if x != nil {
		return x.FinalizedAt
	}
	return 0
}

func (x *EventBundleFinalized) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *EventBundleFinalized) GetNextUploader() string {
	if x != nil {
		return x.NextUploader
	}
	return ""
}

// EventClaimedUploaderRole is an event emitted when an uploader claims the uploader role
// emitted_by: MsgClaimUploaderRole
type EventClaimedUploaderRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// id internal id for the KYVE-bundle
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// new_uploader the address of the participant who claimed
	// the free uploader role
	NewUploader string `protobuf:"bytes,3,opt,name=new_uploader,json=newUploader,proto3" json:"new_uploader,omitempty"`
}

func (x *EventClaimedUploaderRole) Reset() {
	*x = EventClaimedUploaderRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventClaimedUploaderRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventClaimedUploaderRole) ProtoMessage() {}

// Deprecated: Use EventClaimedUploaderRole.ProtoReflect.Descriptor instead.
func (*EventClaimedUploaderRole) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventClaimedUploaderRole) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventClaimedUploaderRole) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventClaimedUploaderRole) GetNewUploader() string {
	if x != nil {
		return x.NewUploader
	}
	return ""
}

// EventSkippedUploaderRole is an event emitted when an uploader skips the upload
// emitted_by: MsgSkipUploaderRole
type EventSkippedUploaderRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// id internal id for the KYVE-bundle
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// previous_uploader is the address of the staker who skipped his uploader role
	PreviousUploader string `protobuf:"bytes,3,opt,name=previous_uploader,json=previousUploader,proto3" json:"previous_uploader,omitempty"`
	// new_uploader is the address of the new uploader who got automatically selected
	NewUploader string `protobuf:"bytes,4,opt,name=new_uploader,json=newUploader,proto3" json:"new_uploader,omitempty"`
}

func (x *EventSkippedUploaderRole) Reset() {
	*x = EventSkippedUploaderRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSkippedUploaderRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSkippedUploaderRole) ProtoMessage() {}

// Deprecated: Use EventSkippedUploaderRole.ProtoReflect.Descriptor instead.
func (*EventSkippedUploaderRole) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventSkippedUploaderRole) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventSkippedUploaderRole) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventSkippedUploaderRole) GetPreviousUploader() string {
	if x != nil {
		return x.PreviousUploader
	}
	return ""
}

func (x *EventSkippedUploaderRole) GetNewUploader() string {
	if x != nil {
		return x.NewUploader
	}
	return ""
}

// EventPointIncreased is an event emitted when a staker receives a point
// emitted_by: MsgSubmitBundleProposal, EndBlock
type EventPointIncreased struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// staker is the address of the staker who received the point
	Staker string `protobuf:"bytes,2,opt,name=staker,proto3" json:"staker,omitempty"`
	// current_points is the amount of points the staker has now
	CurrentPoints uint64 `protobuf:"varint,3,opt,name=current_points,json=currentPoints,proto3" json:"current_points,omitempty"`
}

func (x *EventPointIncreased) Reset() {
	*x = EventPointIncreased{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPointIncreased) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPointIncreased) ProtoMessage() {}

// Deprecated: Use EventPointIncreased.ProtoReflect.Descriptor instead.
func (*EventPointIncreased) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventPointIncreased) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventPointIncreased) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

func (x *EventPointIncreased) GetCurrentPoints() uint64 {
	if x != nil {
		return x.CurrentPoints
	}
	return 0
}

// EventPointIncreased is an event emitted when a staker receives a point
// emitted_by: MsgSubmitBundleProposal, EndBlock
type EventPointsReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the unique ID of the pool.
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// staker is the address of the staker who has zero points now
	Staker string `protobuf:"bytes,2,opt,name=staker,proto3" json:"staker,omitempty"`
}

func (x *EventPointsReset) Reset() {
	*x = EventPointsReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPointsReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPointsReset) ProtoMessage() {}

// Deprecated: Use EventPointsReset.ProtoReflect.Descriptor instead.
func (*EventPointsReset) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventPointsReset) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *EventPointsReset) GetStaker() string {
	if x != nil {
		return x.Staker
	}
	return ""
}

var File_kyve_bundles_v1beta1_events_proto protoreflect.FileDescriptor

var file_kyve_bundles_v1beta1_events_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x6f,
	0x6c, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x41,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x76,
	0x6f, 0x74, 0x65, 0x22, 0xc4, 0x03, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb3, 0x04, 0x0a, 0x14, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x62, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x62, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6b,
	0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x69, 0x6e, 0x66, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x22, 0x66, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x22, 0x6d,
	0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a,
	0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x42, 0xe2, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x79, 0x76, 0x65, 0x2e,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x59, 0x56, 0x45, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x75, 0x6c,
	0x73, 0x61, 0x72, 0x2f, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4b, 0x42, 0x58, 0xaa, 0x02, 0x14,
	0x4b, 0x79, 0x76, 0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x56, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x14, 0x4b, 0x79, 0x76, 0x65, 0x5c, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x20, 0x4b, 0x79,
	0x76, 0x65, 0x5c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x16, 0x4b, 0x79, 0x76, 0x65, 0x3a, 0x3a, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kyve_bundles_v1beta1_events_proto_rawDescOnce sync.Once
	file_kyve_bundles_v1beta1_events_proto_rawDescData = file_kyve_bundles_v1beta1_events_proto_rawDesc
)

func file_kyve_bundles_v1beta1_events_proto_rawDescGZIP() []byte {
	file_kyve_bundles_v1beta1_events_proto_rawDescOnce.Do(func() {
		file_kyve_bundles_v1beta1_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_kyve_bundles_v1beta1_events_proto_rawDescData)
	})
	return file_kyve_bundles_v1beta1_events_proto_rawDescData
}

var file_kyve_bundles_v1beta1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_kyve_bundles_v1beta1_events_proto_goTypes = []interface{}{
	(*EventUpdateParams)(nil),        // 0: kyve.bundles.v1beta1.EventUpdateParams
	(*EventBundleVote)(nil),          // 1: kyve.bundles.v1beta1.EventBundleVote
	(*EventBundleProposed)(nil),      // 2: kyve.bundles.v1beta1.EventBundleProposed
	(*EventBundleFinalized)(nil),     // 3: kyve.bundles.v1beta1.EventBundleFinalized
	(*EventClaimedUploaderRole)(nil), // 4: kyve.bundles.v1beta1.EventClaimedUploaderRole
	(*EventSkippedUploaderRole)(nil), // 5: kyve.bundles.v1beta1.EventSkippedUploaderRole
	(*EventPointIncreased)(nil),      // 6: kyve.bundles.v1beta1.EventPointIncreased
	(*EventPointsReset)(nil),         // 7: kyve.bundles.v1beta1.EventPointsReset
	(*Params)(nil),                   // 8: kyve.bundles.v1beta1.Params
	(VoteType)(0),                    // 9: kyve.bundles.v1beta1.VoteType
	(BundleStatus)(0),                // 10: kyve.bundles.v1beta1.BundleStatus
}
var file_kyve_bundles_v1beta1_events_proto_depIdxs = []int32{
	8,  // 0: kyve.bundles.v1beta1.EventUpdateParams.old_params:type_name -> kyve.bundles.v1beta1.Params
	8,  // 1: kyve.bundles.v1beta1.EventUpdateParams.new_params:type_name -> kyve.bundles.v1beta1.Params
	9,  // 2: kyve.bundles.v1beta1.EventBundleVote.vote:type_name -> kyve.bundles.v1beta1.VoteType
	10, // 3: kyve.bundles.v1beta1.EventBundleFinalized.status:type_name -> kyve.bundles.v1beta1.BundleStatus
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_kyve_bundles_v1beta1_events_proto_init() }
func file_kyve_bundles_v1beta1_events_proto_init() {
	if File_kyve_bundles_v1beta1_events_proto != nil {
		return
	}
	file_kyve_bundles_v1beta1_bundles_proto_init()
	file_kyve_bundles_v1beta1_params_proto_init()
	file_kyve_bundles_v1beta1_tx_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kyve_bundles_v1beta1_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBundleVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBundleProposed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBundleFinalized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventClaimedUploaderRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSkippedUploaderRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPointIncreased); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPointsReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kyve_bundles_v1beta1_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kyve_bundles_v1beta1_events_proto_goTypes,
		DependencyIndexes: file_kyve_bundles_v1beta1_events_proto_depIdxs,
		MessageInfos:      file_kyve_bundles_v1beta1_events_proto_msgTypes,
	}.Build()
	File_kyve_bundles_v1beta1_events_proto = out.File
	file_kyve_bundles_v1beta1_events_proto_rawDesc = nil
	file_kyve_bundles_v1beta1_events_proto_goTypes = nil
	file_kyve_bundles_v1beta1_events_proto_depIdxs = nil
}
